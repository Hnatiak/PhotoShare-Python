{"version":3,"file":"static/js/726.2949560a.chunk.js","mappings":"0PAIO,MAAMA,GAAiBC,EAAAA,EAAAA,GAAOC,IAAPD,CAAaE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0GAO9BC,EAAMJ,EAAAA,EAAOK,IAAGC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,iGAOhBI,EAAaP,EAAAA,EAAOK,IAAGG,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,uIAQvBM,EAAcT,EAAAA,EAAOU,OAAMC,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,kXAiB3BS,GAAIZ,EAAAA,EAAAA,GAAOa,EAAAA,GAAPb,CAAYc,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,6FAkChBY,GA1BWf,EAAAA,EAAOK,IAAGW,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,oIAUFH,EAAAA,EAAOiB,MAAKC,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,mSAgBnBH,EAAAA,EAAOmB,MAAKC,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,6BAOxBkB,EAAerB,EAAAA,EAAOK,IAAGiB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,4HAQzBoB,EAAOvB,EAAAA,EAAOwB,KAAIC,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,oNAYlBuB,EAAQ1B,EAAAA,EAAOmB,MAAKQ,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,oDAKpByB,EAAW5B,EAAAA,EAAO6B,SAAQC,IAAAA,GAAA3B,EAAAA,EAAAA,GAAA,uGAQ1B4B,EAAe/B,EAAAA,EAAOU,OAAMsB,IAAAA,GAAA7B,EAAAA,EAAAA,GAAA,4IAU5B8B,EAAYjC,EAAAA,EAAOiB,MAAKiB,IAAAA,GAAA/B,EAAAA,EAAAA,GAAA,ogBAuBxBgC,EAAenC,EAAAA,EAAOoC,IAAGC,IAAAA,GAAAlC,EAAAA,EAAAA,GAAA,2BAKzBmC,EAAqBtC,EAAAA,EAAOK,IAAGkC,IAAAA,GAAApC,EAAAA,EAAAA,GAAA,uGAO/BqC,EAAcxC,EAAAA,EAAOU,OAAM+B,IAAAA,GAAAtC,EAAAA,EAAAA,GAAA,yJ,gBChKjC,MAAMuC,EAAY1C,EAAAA,EAAO2C,GAAEzC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+IAUrByC,EAAS5C,EAAAA,EAAOU,OAAMJ,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,6OActB0C,EAAY7C,EAAAA,EAAO8C,GAAEtC,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,mPAkBrBC,EAAMJ,EAAAA,EAAOK,IAAGM,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,2GAOhB4C,GAAa/C,EAAAA,EAAOK,IAAGS,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,0CAKvB6C,GAAOhD,EAAAA,EAAOU,OAAMM,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,uP,0BCxD1B,MAAM8C,GAAgBC,GAAUA,EAAMC,MAAMC,O,cCOnD,MAyCA,GAzCeC,KACb,MAAMC,GAAOC,EAAAA,EAAAA,KAAaL,GAAUA,EAAMM,KAAKC,KAAKH,OAC9CI,GAAWC,EAAAA,EAAAA,MACXP,GAASG,EAAAA,EAAAA,IAAYN,KAEpBW,EAAeC,IAAoBC,EAAAA,EAAAA,UAASV,GAanD,OACEW,EAAAA,GAAAA,KAACrB,EAAS,CAAAsB,SACPJ,EAAcK,KAAKd,IAClBY,EAAAA,GAAAA,KAAClB,EAAS,CAAAmB,UACRE,EAAAA,GAAAA,MAAC9D,EAAG,CAAA4D,SAAA,EACFE,EAAAA,GAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,GAAAA,KAAA,OAAKI,KAAK,QAAQC,IAAKjB,EAAMkB,IAAKC,IAAKnB,EAAMoB,eAC7CR,EAAAA,GAAAA,KAAA,KAAGI,KAAK,cAAaH,SAAEb,EAAMoB,eAC7BR,EAAAA,GAAAA,KAAA,KAAGI,KAAK,OAAMH,SAAEb,EAAMqB,WAExBN,EAAAA,GAAAA,MAACnB,GAAU,CAAAiB,SAAA,CACC,UAATV,IACCS,EAAAA,GAAAA,KAACnB,EAAM,CAACuB,KAAK,SAASM,QAASA,IAvBxBC,WACnB,UACQhB,GAASiB,EAAAA,GAAAA,IAAiBC,IAChCf,GAAiBgB,GAAcA,EAAWC,QAAO3B,GAASA,EAAM4B,KAAOH,MACvEI,GAAAA,GAAMC,QAAQ,2JAChB,CAAE,MAAOC,GACPC,QAAQD,MAAM,wBAAyBA,GACvCF,GAAAA,GAAME,MAAM,oLACd,GAeiDE,CAAajC,EAAM4B,IAAIf,SAAC,YAE/DD,EAAAA,GAAAA,KAACf,GAAI,CAACmB,KAAK,OAAMH,SAAC,gBAXRb,EAAM4B,OAgBd,ECqDhB,GAvFeM,KACb,MAAMC,GAAa/B,EAAAA,EAAAA,KAAYL,GAASA,EAAMM,KAAK8B,cAC5CC,EAAaC,IAAkB1B,EAAAA,EAAAA,WAAS,IACxC2B,EAAcC,IAAmB5B,EAAAA,EAAAA,UAAS,OAC1C6B,EAAYC,IAAiB9B,EAAAA,EAAAA,UAAS,OACvC,SAAE+B,EAAQ,aAAEC,IAAiBC,EAAAA,EAAAA,MAC7BrC,GAAWC,EAAAA,EAAAA,MAOXqC,EAAaA,KACjBR,GAAe,GACfE,EAAgB,MAChBE,EAAc,KAAK,EAqCrB,OAFA3F,IAAAA,cAAoB,UAGlBiE,EAAAA,GAAAA,MAAA,OAAAF,SAAA,CACGsB,IAAevB,EAAAA,GAAAA,KAACV,GAAM,IACtBiC,IACCpB,EAAAA,GAAAA,MAAC3D,EAAU,CAAAyD,SAAA,EACTD,EAAAA,GAAAA,KAACtD,EAAW,CAACwF,KAAK,SAASxB,QAjDjByB,KAChBV,GAAe,EAAK,EAgDgCxB,SAAC,eAE/CD,EAAAA,GAAAA,KAAChE,EAAc,CAACoG,OAAQZ,EAAaa,eAAgBJ,EAAYK,aAAa,kBAAiBrC,UAC7FD,EAAAA,GAAAA,KAAC1C,EAAY,CAAA2C,UACXE,EAAAA,GAAAA,MAAC3C,EAAI,CAAC+E,SAAUR,GAhCVS,IAChB,GAAId,EAAc,CAChB,MAAMe,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQjB,GACxBe,EAASE,OAAO,cAAeH,EAAKhC,aACpCiC,EAASE,OAAO,OAAQH,EAAK/B,MAE7Bd,GAASiD,EAAAA,EAAAA,GAAYH,IAClBI,MAAK,KACJ5B,GAAAA,GAAMC,QAAQ,iJACde,IACAa,OAAOC,SAASC,QAAQ,IAEzBC,OAAO9B,IACNF,GAAAA,GAAME,MAAM,oLAAD+B,OAAyC/B,EAAMgC,SAAU,GAE1E,MACElC,GAAAA,GAAME,MAAM,gIACd,IAckDiC,OAAO,OAAMnD,SAAA,EACnDE,EAAAA,GAAAA,MAAC5B,EAAkB,CAAA0B,SAAA,EACfD,EAAAA,GAAAA,KAAA,MAAIqD,MAAO,CAAEC,OAAQ,OAAQrD,SAAC,cAC9BD,EAAAA,GAAAA,KAACvB,EAAW,CAACyD,KAAK,SAASxB,QAASuB,EAAWhC,SAAC,cAEnD2B,IAAc5B,EAAAA,GAAAA,KAAC5B,EAAY,CAACiC,IAAKuB,EAAYrB,IAAI,aAClDP,EAAAA,GAAAA,KAAChD,EAAS,CAACkF,KAAK,OAAOlB,GAAG,OAAOZ,KAAK,QAAQmD,SAjDtCC,IACpB,MAAMC,EAAOD,EAAEE,OAAOC,MAAM,GAC5BhC,EAAgB8B,GAEhB,MAAMG,EAAS,IAAIC,WACnBD,EAAOE,UAAY,KACjBjC,EAAc+B,EAAOG,OAAO,EAE9BH,EAAOI,cAAcP,EAAK,KA0CdzD,EAAAA,GAAAA,KAAC9B,EAAS,CAAC+F,QAAQ,OAAMhE,SAAC,eAC1BD,EAAAA,GAAAA,KAACnC,EAAQ,CAACuC,KAAK,cAAc8D,YAAY,uBAAwBpC,EAAS,kBAC1E9B,EAAAA,GAAAA,KAACrC,EAAK,CAACuE,KAAK,OAAO9B,KAAK,OAAO8D,YAAY,mCAAoCpC,EAAS,WACxF9B,EAAAA,GAAAA,KAAChC,EAAY,CAACkE,KAAK,SAAQjC,SAAC,sBAMpCsB,IACAvB,EAAAA,GAAAA,KAAC3D,EAAG,CAAA4D,UACFE,EAAAA,GAAAA,MAAA,MAAAF,SAAA,CAAI,kPAAgDD,EAAAA,GAAAA,KAACnD,EAAC,CAACsH,GAAG,iBAAgBlE,SAAC,6EAAgB,2DAG3F,EC3EV,GAZiBmE,KAEbpE,EAAAA,GAAAA,KAAAqE,GAAAA,SAAA,CAAApE,UACED,EAAAA,GAAAA,KAACsB,GAAM,K","sources":["components/Middle/Middle.styled.js","components/Middle/Photos/Photos.styled.js","redux/photos/photoSelectors.js","components/Middle/Photos/Photos.jsx","components/Middle/Middle.jsx","pages/HomePage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport Modal from 'react-modal';\n\nexport const ModalComponent = styled(Modal)`\n    display: flex;\n    height: 100vh;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const Div = styled.div`\n  display: flex;\n  height: 60vh;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const DivContent = styled.div`\n  margin: 15px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: flex-start;\n  flex-direction: row-reverse;\n`;\n\nexport const AddPhotoBtn = styled.button`\n    font-style: normal;\n    font-weight: var(--fontWeight500);\n    font-size: 14px;\n    line-height: 21px;\n    text-align: center;\n    letter-spacing: -0.02em;\n    width: 20%;\n    height: 49px;\n    margin-top: 24px;\n    background: rgb(154, 196, 60);\n    border-radius: 8px;\n    @media screen and (max-width: 768px) {\n        width: 287px;\n    }\n`;\n\nexport const A = styled(Link)`\n    transition: color 0.2s ease-in;\n    &:hover{\n        color: #9AC43C;\n    }\n`;\n\n\nexport const DivModal = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    &:hover{\n        color: #9AC43C;\n    }\n`;\n\n\nexport const FileInputWrapper = styled.label`\n  display: inline-block;\n  margin-top: 10px;\n  width: 24px;\n  color: black;\n  height: 24px;\n  border-radius: 15px;\n  background: rgb(154, 196, 60);\n  font-size: 18px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n`;\n\nexport const FileInput = styled.input`\n  display: none;\n`;\n\n\n\n\nexport const ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  width: 80%;\n  background: white;\n  padding: 35px;\n  border-radius: 25px;\n  border: 1px solid rgb(154, 196, 60);\n`;\n\nexport const Input = styled.input`\n  padding: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const Textarea = styled.textarea`\n  padding: 10px;\n  margin-bottom: 10px;\n  resize: none;\n  width: 300px;\n  height: 80px;\n`;\n\nexport const SubmitButton = styled.button`\n  padding: 10px 20px;\n  background-color: #007BFF;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n\n\nexport const EditPhoto = styled.label`\n    font-style: normal;\n    font-weight: var(--fontWeight500);\n    font-size: 16px;\n    line-height: 21px;\n    text-align: center;\n    letter-spacing: -0.02em;\n    width: 350px;\n    height: 49px;\n    margin-top: 10px;\n    background: rgb(154, 196, 60);\n    color: black;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 15px;\n    margin-bottom: 15px;\n    cursor: pointer;\n    @media screen and (max-width: 768px) {\n        width: 287px;\n    }\n`;\n\nexport const ImagePreview = styled.img `\n    width: 60%;\n`\n\n\nexport const CloseButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  width: 100%;\n`;\n\nexport const CloseButton = styled.button`\n  background-color: transparent;\n  border: none;\n  font-size: 16px;\n  cursor: pointer;\n  color: #333;\n  &:hover {\n    color: #000;\n  }\n`;","import styled from '@emotion/styled';\n\nexport const PhotoList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  flex-wrap: wrap;\n  list-style: none;\n  padding: 45px;\n  gap: 25px;\n`;\n\n\nexport const Delete = styled.button`\n  background: red;\n  color: white;\n  border-radius: 15px;\n  font-size: 15px;\n  padding: 4px 20px;\n  border: none;\n  @media screen and (max-width: 780px) {\n    padding: 7px 20px 10px 20px;\n    align-items: center;\n  }\n`;\n\n\nexport const PhotoItem = styled.li`\n  border: 1px solid #ddd;\n  border-radius: 15px;\n  overflow: hidden;\n  border: 1px solid #9AC43C;\n  padding: 25px;\n\n  img {\n    width: 350px;\n    height: auto;\n  }\n\n  p {\n    padding: 10px;\n    text-align: center;\n  }\n`;\n\nexport const Div = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n`;\n\nexport const DivButtons = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const Edit = styled.button`\n  background-color: #0056b3;\n  color: white;\n  border-radius: 15px;\n  font-size: 15px;\n  padding: 4px 20px;\n  border: none;\n  @media screen and (max-width: 780px) {\n    padding: 7px 20px 10px 20px;\n    align-items: center;\n  }\n`;","export const selectPhotos = (state) => state.photo.photos;","import React, { useState } from 'react';\nimport { PhotoItem, PhotoList, Delete, Div, Edit, DivButtons } from './Photos.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deletePhotoThunk } from '../../../redux/photos/photoSlice';\nimport { toast } from 'react-toastify';\nimport { selectPhotos } from '../../../redux/photos/photoSelectors';\n\nconst Photos = () => {\n  const role = useSelector((state) => state.auth.user.role);\n  const dispatch = useDispatch();\n  const photos = useSelector(selectPhotos);\n  \n  const [updatedPhotos, setUpdatedPhotos] = useState(photos);\n\n  const handleDelete = async (photoId) => {\n    try {\n      await dispatch(deletePhotoThunk(photoId));\n      setUpdatedPhotos(prevPhotos => prevPhotos.filter(photo => photo.id !== photoId));\n      toast.success('Фотографія успішно видалена');\n    } catch (error) {\n      console.error('Error deleting photo:', error);\n      toast.error('Помилка при видаленні фотографії');\n    }\n  };\n\n  return (\n    <PhotoList>\n      {updatedPhotos.map((photo) => (\n        <PhotoItem key={photo.id}>\n          <Div>\n            <div>\n              <img name=\"photo\" src={photo.url} alt={photo.description} />\n              <p name=\"description\">{photo.description}</p>\n              <p name=\"tags\">{photo.tags}</p>\n            </div>\n            <DivButtons>\n              {role === 'admin' && (\n                <Delete name=\"delete\" onClick={() => handleDelete(photo.id)}>Delete</Delete>\n              )}\n              <Edit name=\"edit\">Edit</Edit>\n            </DivButtons>\n          </Div>\n        </PhotoItem>\n      ))}\n    </PhotoList>\n  );\n};\n\nexport default Photos;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { deletePhoto } from '../../../redux/photos/photoOperations';\n// import { toast } from 'react-toastify';\n// import { selectPhotos } from '../../../redux/photos/photoSelectors';\n\n// const Photos = () => {\n//   const role = useSelector((state) => state.auth.user.role);\n//   const dispatch = useDispatch();\n//   const photos = useSelector(selectPhotos);\n\n//   const onDelete = async (photoId) => {\n//     try {\n//       await dispatch(deletePhoto(photoId));\n//       toast.success('Фотографія успішно видалена');\n//     } catch (error) {\n//       console.error('Error deleting photo:', error.message);\n//       toast.error('Помилка при видаленні фотографії');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Фотографії</h2>\n//       <div className=\"photo-list\">\n//         {photos.map((photo) => (\n//           <div key={photo.id} className=\"photo-item\">\n//             <img src={photo.url} alt={photo.description} />\n//             <p>{photo.description}</p>\n//             <p>{photo.tags}</p>\n//             {role === 'admin' && (\n//               <button onClick={() => onDelete(photo.id)}>Видалити</button>\n//             )}\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Photos;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import { PhotoItem, PhotoList, Delete, Div, Edit, DivButtons } from './Photos.styled';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { deletePhoto } from '../../../redux/photos/photoOperations';\n// import { toast } from 'react-toastify';\n// import { selectPhotos } from '../../../redux/photos/photoSelectors';\n\n// const Photos = () => {\n//   const role = useSelector((state) => state.auth.user.role);\n//   const dispatch = useDispatch();\n//   const photos = useSelector(selectPhotos);\n  \n//   const [updatedPhotos, setUpdatedPhotos] = useState(photos);\n\n//   const handleDelete = async (photoId) => {\n//     try {\n//       // Dispatch the delete action to the Redux store\n//       await dispatch(deletePhoto(photoId));\n//       // Update the local state to remove the deleted photo\n//       setUpdatedPhotos(prevPhotos => prevPhotos.filter(photo => photo.id !== photoId));\n//       toast.success('Фотографія успішно видалена');\n//     } catch (error) {\n//       console.error('Error deleting photo:', error);\n//       toast.error('Помилка при видаленні фотографії');\n//     }\n//   };\n\n//   return (\n//     <PhotoList>\n//       {updatedPhotos.map((photo) => (\n//         <PhotoItem key={photo.id}>\n//           <Div>\n//             <div>\n//               <img name=\"photo\" src={photo.url} alt={photo.description} />\n//               <p name=\"description\">{photo.description}</p>\n//               <p name=\"tags\">{photo.tags}</p>\n//             </div>\n//             <DivButtons>\n//               {role === 'admin' && (\n//                 <Delete name=\"delete\" onClick={() => handleDelete(photo.id)}>Delete</Delete>\n//               )}\n//               <Edit name=\"edit\">Edit</Edit>\n//             </DivButtons>\n//           </Div>\n//         </PhotoItem>\n//       ))}\n//     </PhotoList>\n//   );\n// };\n\n// export default Photos;","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { createPhoto } from '../../redux/photos/photoOperations';\n// import { selectPhotos } from '../../redux/photos/photoSelectors';\nimport { A, Div, DivContent, AddPhotoBtn, ModalContent, Form, Input, Textarea, SubmitButton, ModalComponent, FileInput, EditPhoto, ImagePreview, CloseButtonWrapper, CloseButton } from './Middle.styled';\nimport Photos from './Photos/Photos';\nimport { toast } from 'react-toastify';\nimport Modal from 'react-modal';\n\nconst Middle = () => {\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const { register, handleSubmit } = useForm();\n  const dispatch = useDispatch();\n  // const photos = useSelector(selectPhotos);\n\n  const openModal = () => {\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n    setSelectedFile(null);\n    setPreviewUrl(null);\n  };\n\n  const onFileChange = (e) => {\n    const file = e.target.files[0];\n    setSelectedFile(file);\n\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setPreviewUrl(reader.result);\n    };\n    reader.readAsDataURL(file);\n  };\n\n  const onSubmit = (data) => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      formData.append('description', data.description);\n      formData.append('tags', data.tags);\n\n      dispatch(createPhoto(formData))\n        .then(() => {\n          toast.success('Ваш пост успішно добавлено');\n          closeModal();\n          window.location.reload()\n        })\n        .catch((error) => {\n          toast.error(`Щось пішло не так, спробуйте ще раз: ${error.message}`);\n        });\n    } else {\n      toast.error('Будь ласка, додайте фото.');\n    }\n  };\n\n  Modal.setAppElement('#root');  // Ensure Modal is accessible\n\n  return (\n    <div>\n      {isLoggedIn && (<Photos />)}\n      {isLoggedIn && (\n        <DivContent>\n          <AddPhotoBtn type=\"button\" onClick={openModal}>Add Photo</AddPhotoBtn>\n\n          <ModalComponent isOpen={modalIsOpen} onRequestClose={closeModal} contentLabel=\"Add Photo Modal\">\n            <ModalContent>\n              <Form onSubmit={handleSubmit(onSubmit)} method=\"post\">\n                <CloseButtonWrapper>\n                    <h2 style={{ margin: '0px' }}>Add Post</h2>\n                    <CloseButton type=\"button\" onClick={closeModal}>✖</CloseButton>\n                </CloseButtonWrapper>\n                {previewUrl && <ImagePreview src={previewUrl} alt=\"Preview\" />}\n                <FileInput type=\"file\" id='file' name='photo' onChange={onFileChange} />\n                <EditPhoto htmlFor=\"file\">Add Photo</EditPhoto>\n                <Textarea name='description' placeholder=\"Enter description\" {...register('description')} />\n                <Input type=\"text\" name='tags' placeholder=\"Enter tags separated by comma\" {...register('tags')} />\n                <SubmitButton type=\"submit\">Submit</SubmitButton>\n              </Form>\n            </ModalContent>\n          </ModalComponent>\n        </DivContent>\n      )}\n      {!isLoggedIn && (\n        <Div>\n          <h1>Для того щоб почати тут щось робити, будь ласка <A to=\"/auth/register\">зареєструйся</A> спочатку</h1>\n        </Div>\n      )}\n    </div>\n  );\n};\n\nexport default Middle;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { useForm } from 'react-hook-form';\n// import { createPhoto } from '../../redux/photos/photoOperations';\n// import { selectPhotos } from '../../redux/photos/photoSelectors';\n// import { A, Div, DivContent, AddPhotoBtn, ModalContent, Form, Input, Textarea, SubmitButton, ModalComponent, FileInput, EditPhoto, ImagePreview } from './Middle.styled';\n// import Photos from './Photos/Photos';\n// import { toast } from 'react-toastify';\n\n// const Middle = () => {\n//   const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n//   const [modalIsOpen, setModalIsOpen] = useState(false);\n//   const [selectedFile, setSelectedFile] = useState(null);\n//   const [previewUrl, setPreviewUrl] = useState(null);\n//   const { register, handleSubmit } = useForm();\n//   const dispatch = useDispatch();\n//   const user = useSelector(state => state.auth.user);\n\n//   const openModal = () => {\n//     setModalIsOpen(true);\n//   };\n\n//   const closeModal = () => {\n//     setModalIsOpen(false);\n//     setSelectedFile(null);\n//     setPreviewUrl(null);\n//   };\n\n//   const onFileChange = (e) => {\n//     const file = e.target.files[0];\n//     setSelectedFile(file);\n\n//     const reader = new FileReader();\n//     reader.onloadend = () => {\n//       setPreviewUrl(reader.result);\n//     };\n//     reader.readAsDataURL(file);\n//   };\n\n//     const onSubmit = (data) => {\n//         if (selectedFile) {\n//             const formData = new FormData();\n//             formData.append('photo', selectedFile);\n//             formData.append('description', data.description);\n//             formData.append('tags', data.tags);\n\n//             dispatch(createPhoto(formData))\n//                 .then(() => {\n//                     toast.success('Ваш пост успішно добавлено');\n//                     closeModal();\n//                 })\n//                 .catch((error) => {\n//                     toast.error(`Щось пішло не так, спробуйте ще раз: ${error.message}`);\n//                 });\n//         } else {\n//             toast.error('Будь ласка, додайте фото.');\n//         }\n//     };\n\n//   const photos = useSelector(selectPhotos);\n\n//   return (\n//     <div>\n//       {isLoggedIn && (\n//         <DivContent>\n//           <AddPhotoBtn type=\"button\" onClick={openModal}>Add Photo</AddPhotoBtn>\n\n//           <ModalComponent isOpen={modalIsOpen} onRequestClose={closeModal} contentLabel=\"Add Photo Modal\">\n//             <ModalContent>\n//               <Form onSubmit={handleSubmit(onSubmit)}>\n//                 <h2>Add Post</h2>\n//                 {previewUrl && <ImagePreview src={previewUrl} alt=\"Preview\" />}\n//                 <FileInput type=\"file\" id='file' name='photo' onChange={onFileChange} />\n//                 <EditPhoto htmlFor=\"file\">Add Photo</EditPhoto>\n//                 <Textarea name='description' placeholder=\"Enter description\" />\n//                 <Input type=\"text\" name='tags' placeholder=\"Enter tags separated by comma\" />\n//                 <SubmitButton type=\"submit\">Submit</SubmitButton>\n//               </Form>\n//             </ModalContent>\n//           </ModalComponent>\n//         </DivContent>\n//       )}\n//       {!isLoggedIn && (\n//         <Div>\n//           <h1>Для того щоб почати тут щось робити, будь ласка <A to=\"/auth/register\">зареєструйся</A> спочатку</h1>\n//         </Div>\n//       )}\n//       <Photos photos={photos} />\n//     </div>\n//   );\n// };\n\n// export default Middle;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { useForm } from 'react-hook-form';\n// import { createPhoto } from '../../redux/photos/photoOperations';\n// import { selectPhotos } from '../../redux/photos/photoSelectors';\n// import { A, Div, DivContent, AddPhotoBtn, ModalContent, Form, Input, Textarea, SubmitButton, ModalComponent, FileInput, EditPhoto, ImagePreview } from './Middle.styled';\n// import Photos from './Photos/Photos';\n// import { toast } from 'react-toastify';\n\n// const Middle = () => {\n//   const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n//   const [modalIsOpen, setModalIsOpen] = useState(false);\n//   const [selectedFile, setSelectedFile] = useState(null);\n//   const [previewUrl, setPreviewUrl] = useState(null);\n//   const { register, handleSubmit } = useForm();\n//   const dispatch = useDispatch();\n//   const user = useSelector(state => state.auth.user);\n\n//   const openModal = () => {\n//     setModalIsOpen(true);\n//   };\n\n//   const closeModal = () => {\n//     setModalIsOpen(false);\n//     setSelectedFile(null);\n//     setPreviewUrl(null);\n//   };\n\n//   const onFileChange = (e) => {\n//     const file = e.target.files[0];\n//     setSelectedFile(file);\n\n//     const reader = new FileReader();\n//     reader.onloadend = () => {\n//       setPreviewUrl(reader.result);\n//     };\n//     reader.readAsDataURL(file);\n//   };\n\n//     const onSubmit = (data) => {\n//   if (selectedFile) {\n//     // Handle photo creation\n//     const formData = new FormData();\n//     formData.append('photo', selectedFile);\n//     formData.append('description', data.description);\n//     formData.append('tags', data.tags);\n//     dispatch(createPhoto(formData));\n//     toast.success('Ваш пост успішно добавлено');\n//   } else {\n//     toast.error('Щось пішло не так, спробуйте ще раз');\n//   }\n//   closeModal();\n// };\n\n//   const photos = useSelector(selectPhotos);\n\n//   return (\n//     <div>\n//       {isLoggedIn && (\n//         <DivContent>\n//           <AddPhotoBtn type=\"button\" onClick={openModal}>Add Photo</AddPhotoBtn>\n\n//           <ModalComponent isOpen={modalIsOpen} onRequestClose={closeModal} contentLabel=\"Add Photo Modal\">\n//             <ModalContent>\n//               <Form onSubmit={handleSubmit(onSubmit)}>\n//                 <h2>Add Post</h2>\n//                 {previewUrl && <ImagePreview name=\"photo\" src={previewUrl} alt=\"Preview\" />}\n//                 <FileInput type=\"file\" id=\"file\" {...register(\"photo\")} onChange={onFileChange} />\n//                 <EditPhoto htmlFor=\"file\" name=\"photo\">Add Photo</EditPhoto>\n//                 <Textarea name=\"description\" {...register(\"description\")} placeholder=\"Enter description\" />\n//                 <Input type=\"text\" name=\"tags\" {...register(\"tags\")} placeholder=\"Enter tags separated by comma\" />\n//                 <SubmitButton type=\"submit\">Submit</SubmitButton>\n//               </Form>\n//             </ModalContent>\n//           </ModalComponent>\n//         </DivContent>\n//       )}\n//       {!isLoggedIn && (\n//         <Div>\n//           <h1>Для того щоб почати тут щось робити, будь ласка <A to=\"/auth/register\">зареєструйся</A> спочатку</h1>\n//         </Div>\n//       )}\n//       <Photos photos={photos} />\n//     </div>\n//   );\n// };\n\n// export default Middle;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import { useSelector } from 'react-redux';\n// import { useForm } from 'react-hook-form';\n// import { A, Div, DivContent, AddPhotoBtn, ModalContent, Form, Input, Textarea, SubmitButton, ModalComponent, FileInput, EditPhoto, ImagePreview } from './Middle.styled';\n\n// const Middle = () => {\n//   const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n//   const [modalIsOpen, setModalIsOpen] = useState(false);\n//   // eslint-disable-next-line\n//   const [selectedFile, setSelectedFile] = useState(null);\n//   const [previewUrl, setPreviewUrl] = useState(null);\n//   const { register, handleSubmit } = useForm();\n\n//   const openModal = () => {\n//     setModalIsOpen(true);\n//   };\n\n//   const closeModal = () => {\n//     setModalIsOpen(false);\n//     setSelectedFile(null); // Clear the selected file when closing the modal\n//     setPreviewUrl(null); // Clear the preview URL when closing the modal\n//   };\n\n//   const onFileChange = (e) => {\n//     const file = e.target.files[0];\n//     setSelectedFile(file);\n\n//     // Create a URL for the selected file\n//     const reader = new FileReader();\n//     reader.onloadend = () => {\n//       setPreviewUrl(reader.result);\n//     };\n//     reader.readAsDataURL(file);\n//   };\n\n//   const onSubmit = (data) => {\n//     console.log(data);\n//     closeModal();\n//   };\n\n//   return (\n//     <div>\n//       {isLoggedIn && (\n//         <DivContent>\n//           <AddPhotoBtn type=\"button\" onClick={openModal}>Add Photo</AddPhotoBtn>\n\n//           <ModalComponent isOpen={modalIsOpen} onRequestClose={closeModal} contentLabel=\"Add Photo Modal\">\n//             <ModalContent>\n//               <Form onSubmit={handleSubmit(onSubmit)}>\n//                 <h2>Add Post</h2>\n//                 {previewUrl && <ImagePreview src={previewUrl} alt=\"Preview\" />}\n//                 <FileInput type=\"file\" id=\"file\" {...register(\"photo\")} onChange={onFileChange} />\n//                 <EditPhoto htmlFor=\"file\">Add Photo</EditPhoto>\n//                 <Textarea {...register(\"description\")} placeholder=\"Enter description\" />\n//                 <Input type=\"text\" {...register(\"tags\")} placeholder=\"Enter tags separated by comma\" />\n//                 <SubmitButton type=\"submit\">Submit</SubmitButton>\n//               </Form>\n//             </ModalContent>\n//           </ModalComponent>\n//         </DivContent>\n//       )}\n//       {!isLoggedIn && (\n//         <Div>\n//           <h1>Для того щоб почати тут щось робити, будь ласка <A to=\"/auth/register\">зареєструйся</A> спочатку</h1>\n//         </Div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Middle;","import Middle from '../components/Middle/Middle';\n// import Collaction from '../components/Home/Collaction/Collaction';\n// import Container from '../components/Home/Container/Container';\n// import Experience from '../components/Home/Experience/Experience';\n// import NewsContainer from '../components/Home/News/NewsContainer';\n\nconst HomePage = () => {\n  return (\n    <>\n      <Middle />\n      {/* <Collaction />\n      <Container />\n      <Experience />\n      <NewsContainer /> */}\n    </>\n  );\n};\n\nexport default HomePage;"],"names":["ModalComponent","styled","Modal","_templateObject","_taggedTemplateLiteral","Div","div","_templateObject2","DivContent","_templateObject3","AddPhotoBtn","button","_templateObject4","A","Link","_templateObject5","FileInput","_templateObject6","label","_templateObject7","input","_templateObject8","ModalContent","_templateObject9","Form","form","_templateObject10","Input","_templateObject11","Textarea","textarea","_templateObject12","SubmitButton","_templateObject13","EditPhoto","_templateObject14","ImagePreview","img","_templateObject15","CloseButtonWrapper","_templateObject16","CloseButton","_templateObject17","PhotoList","ul","Delete","PhotoItem","li","DivButtons","Edit","selectPhotos","state","photo","photos","Photos","role","useSelector","auth","user","dispatch","useDispatch","updatedPhotos","setUpdatedPhotos","useState","_jsx","children","map","_jsxs","name","src","url","alt","description","tags","onClick","async","deletePhotoThunk","photoId","prevPhotos","filter","id","toast","success","error","console","handleDelete","Middle","isLoggedIn","modalIsOpen","setModalIsOpen","selectedFile","setSelectedFile","previewUrl","setPreviewUrl","register","handleSubmit","useForm","closeModal","type","openModal","isOpen","onRequestClose","contentLabel","onSubmit","data","formData","FormData","append","createPhoto","then","window","location","reload","catch","concat","message","method","style","margin","onChange","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","htmlFor","placeholder","to","HomePage","_Fragment"],"sourceRoot":""}