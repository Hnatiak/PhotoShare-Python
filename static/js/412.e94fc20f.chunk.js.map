{"version":3,"file":"static/js/412.e94fc20f.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/AuthPage.jsx"],"sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { Link } from '@mui/material';\nimport styled from '@emotion/styled';\nimport { ErrorMessage } from 'formik';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div `\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 600px;\n    width: 100%;\n    background: var(--welcomeBgColor);\n    background-repeat: no-repeat;\n    background-size: cover;\n`\n\nexport const Content = styled.div `\n  text-align: center;\n  // background: #111;\n  border: 1px solid #9AC43C;\n  border-radius: 20px;\n`\nexport const Menu = styled.div`\n    background: #9AC43C;\n    padding: 30px;\n    display: flex;\n    border-radius: 20px 20px 0 0;\n`;\n\nexport const StyledLink = styled(Link)`\n  left: 160px;\n  top: 40px;\n  font-style: normal;\n  font-weight: var(--fontWeight500);\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: white;\n`;\n\nexport const StyledRegistrationLink = styled(Link)`\n  margin-right: 14px;\n  font-style: normal;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: #111;\n`;\n\nexport const Inputs = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  align-items: center;\n  padding: 30px;\n\n  input {\n    width: 326px;\n    height: 49px;\n    left: 40px;\n    top: 107px;\n    // color: white;\n    background: var(--inputBgColor);\n    opacity: 0.4;\n    border: 1px solid white;\n    padding-left: 18px;\n    box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n    border-radius: 8px;\n    @media screen and (max-width: 768px) {\n        width: 287px;\n\n    }\n  }\n`;\nexport const PasswordInput = styled.div `\n    position: relative;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    gap: 14px;\n`\nexport const PasswordInputField = styled.input`\n  width: 326px;\n  height: 49px;\n  left: 40px;\n  top: 107px;\n  color: var(--lightColor);\n  background: var(--inputBgColor);\n  opacity: 0.4;\n  border: 1px solid white;\n  padding-left: 18px;\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.3);\n  border-radius: 8px;\n`;\n\nexport const PasswordToggle = styled.span`\n    position: absolute;\n    right: 18px;\n    top: 15px;\n    cursor: pointer;\n`;\n\nexport const PasswordIcon = styled(FontAwesomeIcon)`\n    color: var(--passwordColor);\n`;\nexport const Svg = styled.svg`\n  width: 16.5px;\n  height: 16px;\n  top: 50%;\n  right: 4px;\n`;\nexport const RegisterBtn = styled.button`\n    font-style: normal;\n    font-weight: var(--fontWeight500);\n    font-size: 14px;\n    line-height: 21px;\n    text-align: center;\n    letter-spacing: -0.02em;\n    width: 100%;\n    height: 49px;\n    margin-top: 24px;\n    background: rgb(154, 196, 60);\n    border-radius: 8px;\n    // color: white;\n    @media screen and (max-width: 768px) {\n        width: 287px;\n    }\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  font-size: 15px;\n  // color: white;\n`;\n\nexport const GoogleButton = styled.a`\n  height: 45px;\n  border-radius: 6px;\n  background-color: #fafafa;\n  color: #23262a;\n  // opacity: 0.7;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  padding: 14px 15px;\n  margin-top: 16px;\n\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.12;\n\n  &:hover {\n    opacity: 1;\n    scale: 1.05;\n    transition: all 0.4s cubic-bezier(0.25, 0.1, 0.25, 1) 0s;\n  }\n`;","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { register } from '../../redux/auth/authOperations';\nimport { Formik, Field } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\nimport {\n  ErrorText,\n  Inputs,\n  Menu,\n  Container,\n  PasswordInput,\n  Content,\n  RegisterBtn,\n  StyledRegistrationLink,\n  StyledLink,\n  PasswordToggle,\n  PasswordIcon,\n} from './RegisterForm.styled';\nimport { toast } from 'react-toastify';\nimport { useState } from 'react';\n\nconst RegisterSchema = Yup.object().shape({\n  name: Yup.string().required('Ім\\'я обов\\'язкове'),\n  email: Yup.string().min(6, 'Е-пошта мусить бути більше 6-ти символів').email('Е-пошта неправильний').required('Е-пошта обов\\'язкова'),\n  password: Yup.string().min(8, 'Пароль мусить бути більше 8-ми цифр').required('Пароль обов\\'язковий'),\n});\n\nfunction RegistrationPage() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const newUser = {\n      username: event.target.elements.username.value,\n      email: event.target.elements.email.value,\n      password: event.target.elements.password.value,\n    };\n\n    const response = await dispatch(register(newUser));\n\n    if (response.error) {\n      toast.error(\"Такий акаунт уже існує\")\n    } else {\n      toast.success(\"Ви успішно зареєструвалися\");\n      navigate(`/auth/login`);\n      // navigate(`/auth/confirmed_email?email=${newUser.email}`);\n    }\n  };\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <Formik initialValues={{ username: '', email: '', password: '' }} validationSchema={RegisterSchema}>\n          <Content>\n            <Menu>\n              <StyledRegistrationLink to=\"/auth/register\" underline=\"none\">Реєстрація</StyledRegistrationLink>\n              <StyledLink to=\"/auth/login\" underline=\"none\">Вхід</StyledLink>\n            </Menu>\n            <Inputs>\n              <Field autoFocus name=\"username\" type=\"text\" placeholder=\"Ім'я\" />\n              <ErrorText name=\"username\" component=\"div\" />\n              <Field name=\"email\" type=\"email\" placeholder=\"Е-пошта\" />\n              <ErrorText name=\"email\" component=\"div\" />\n              <PasswordInput>\n                <Field name=\"password\" type={showPassword ? 'text' : 'password'} placeholder=\"Пароль\" />\n                <ErrorText name=\"password\" component=\"div\" />\n                <PasswordToggle className={`${PasswordToggle} ${PasswordIcon}`} onClick={togglePasswordVisibility}>\n                  {showPassword ? (\n                    <PasswordIcon icon={faEyeSlash} width=\"18px\" />\n                  ) : (\n                    <PasswordIcon icon={faEye} width=\"18px\" />\n                  )}\n                </PasswordToggle>\n              </PasswordInput>\n              <RegisterBtn type=\"submit\">Зареєструватися</RegisterBtn>\n              <ErrorText name=\"submit\" component=\"div\" />\n            </Inputs>\n          </Content>\n        </Formik>\n      </form>\n    </Container>\n  );\n}\n\nexport default RegistrationPage;\n\n\n\n// import React from 'react';\n// // import { useNavigate } from 'react-router-dom';\n// import { register } from '../../redux/auth/authOperations';\n// import { Formik, Field } from 'formik';\n// import { useDispatch } from 'react-redux';\n// import * as Yup from 'yup';\n// // import googleLogo from '../../images/googleLogo.svg';\n// import { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\n// import {\n//   ErrorText,\n//   Inputs,\n//   Menu,\n//   Container,\n//   PasswordInput,\n//   Content,\n//   RegisterBtn,\n//   StyledRegistrationLink,\n//   StyledLink,\n//   PasswordToggle,\n//   PasswordIcon,\n//   // GoogleButton\n// } from './RegisterForm.styled';\n// import { toast } from 'react-toastify';\n// import { useState } from 'react';\n\n// const RegisterSchema = Yup.object().shape({\n//   name: Yup.string().required('Ім\\'я обов\\'язкове'),\n//   email: Yup.string().min(6, 'Е-пошта мусить бути більше 6-ти символів').email('Е-пошта неправильний').required('Е-пошта обов\\'язкова'),\n//   password: Yup.string().min(8, 'Пароль мусить бути більше 8-ми цифр').required('Пароль обов\\'язковий'),\n// });\n\n// function RegistrationPage() {\n//   const token = \"\";\n//   // const navigate = useNavigate();\n//   const dispatch = useDispatch();\n//   const [showPassword, setShowPassword] = useState(false);\n\n//   const togglePasswordVisibility = () => {\n//     setShowPassword(!showPassword);\n//   };\n\n//   const handleSubmit = async event => {\n//     event.preventDefault();\n//     const newUser = {\n//       username: event.target.elements.username.value,\n//       email: event.target.elements.email.value,\n//       password: event.target.elements.password.value,\n//     };\n\n//     const response = await dispatch(register(newUser));\n\n//     if (response.error) {\n//       toast.error(\"Такий акаунт уже існує\")\n//     } else {\n//       // navigate('/confirmed-email');\n//       toast.success(\"Ви успішно зареєструвалися\")\n//     }\n//   };\n\n//   return (\n//     <Container>\n//       <form onSubmit={handleSubmit}>\n//         <Formik initialValues={{ username: '', email: '', password: '' }} validationSchema={RegisterSchema}>\n//           <Content>\n//             <Menu>\n//               <StyledRegistrationLink to=\"/auth/register\" underline=\"none\">Реєстрація</StyledRegistrationLink>\n//               <StyledLink to=\"/auth/login\" underline=\"none\">Вхід</StyledLink>\n//             </Menu>\n//             <Inputs>\n//               <Field autoFocus name=\"username\" type=\"text\" placeholder=\"Ім'я\" />\n//               <ErrorText name=\"username\" component=\"div\" />\n//               <Field name=\"email\" type=\"email\" placeholder=\"Е-пошта\" />\n//               <ErrorText name=\"email\" component=\"div\" />\n//               <PasswordInput>\n//                 <Field name=\"password\" type={showPassword ? 'text' : 'password'} placeholder=\"Пароль\" />\n//                 <ErrorText name=\"password\" component=\"div\" />\n//                 <PasswordToggle className={`${PasswordToggle} ${PasswordIcon}`} onClick={togglePasswordVisibility}>\n//                   {showPassword ? (\n//                     <PasswordIcon icon={faEyeSlash} width=\"18px\" />\n//                   ) : (\n//                     <PasswordIcon icon={faEye} width=\"18px\" />\n//                   )}\n//                 </PasswordToggle>\n//               </PasswordInput>\n//               <RegisterBtn type=\"submit\"><StyledLink to={`/auth/confirmed_email/`}>Зареєструватися</StyledLink></RegisterBtn>\n//               <ErrorText name=\"submit\" component=\"div\" />\n\n//               {/* <GoogleButton href=\"https://lata-project-backend.onrender.com/api/auth/google\">\n//                 <img height={25} width={25} alt=\"googleLogo\" src={googleLogo} />\n//                 Sign up with Google\n//               </GoogleButton> */}\n//             </Inputs>\n//           </Content>\n//         </Formik>\n//       </form>\n//     </Container>\n//   );\n// }\n\n// export default RegistrationPage;","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { Link } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\nimport { ErrorMessage } from 'formik';\n\nexport const Container = styled.div `\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 600px;\n  width: 100%;\n  background: var(--welcomeBgColor);\n  background-repeat: no-repeat;\n  background-size: cover;\n`\nexport const Content = styled.div `\n  text-align: center;\n  // background: #111;\n  border-radius: 20px;\n  border: 1px solid #9AC43C;\n`\nexport const Menu = styled.div`\n    background: #9AC43C;\n    padding: 30px;\n    display: flex;\n    border-radius: 20px 20px 0 0;\n`;\n\nexport const StyledLink = styled(Link)`\n  left: 160px;\n  top: 40px;\n  font-style: normal;\n  font-weight: var(--fontWeight500);\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: #111;\n`;\n\nexport const StyledRegistrationLink = styled(Link)`\n  margin-right: 14px;\n  font-style: normal;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: white;\n`;\n\nexport const Inputs = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  align-items: center;\n  padding: 30px;\n\n  input {\n    width: 326px;\n    height: 49px;\n    left: 40px;\n    top: 107px;\n    // color: white;\n    background: var(--inputBgColor);\n    opacity: 0.4;\n    border: 1px solid white;\n    padding-left: 18px;\n    box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n    border-radius: 8px;\n    @media screen and (max-width: 768px) {\n        width: 287px;\n\n    }\n  }\n`;\nexport const PasswordInput = styled.div `\n    position: relative;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    gap: 14px;\n`\nexport const PasswordInputField = styled.input`\n  width: 326px;\n  height: 49px;\n  left: 40px;\n  top: 107px;\n  color: var(--lightColor);\n  background: var(--inputBgColor);\n  opacity: 0.4;\n  border: 1px solid white;\n  padding-left: 18px;\n  box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n  border-radius: 8px;\n`;\n\nexport const PasswordToggle = styled.span`\n    position: absolute;\n    right: 18px;\n    top: 15px;\n    cursor: pointer;\n    color: var(--passwordColor);\n`;\n\nexport const PasswordIcon = styled(FontAwesomeIcon)`\n    color: var(--passwordColor);\n`;\nexport const Svg = styled.svg`\n  width: 16.5px;\n  height: 16px;\n  top: 50%;\n  right: 4px;\n`;\nexport const LoginBtn = styled.button`\n    font-style: normal;\n    font-weight: var(--fontWeight500);\n    font-size: 14px;\n    line-height: 21px;\n    text-align: center;\n    margin-top: 24px;\n    letter-spacing: -0.02em;\n    width: 100%;\n    height: 49px;\n    background: rgb(154, 196, 60);\n    border-radius: 8px;\n    color: #000;\n    @media screen and (max-width: 768px) {\n        width: 287px;\n    }\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  font-size: 15px;\n  color: #000;\n`;","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { loginUser } from '../../redux/auth/authSlice';\nimport { toast } from 'react-toastify';\nimport { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\nimport {\n  ErrorText,\n  Menu,\n  Inputs,\n  Container,\n  PasswordInput,\n  Content,\n  LoginBtn,\n  StyledRegistrationLink,\n  StyledLink,\n  PasswordToggle,\n  PasswordIcon,\n} from './LoginForm.styled';\n\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string().email('Е-пошта неправильний').required('Е-пошта обов\\'язкова'),\n  password: Yup.string().min(8, 'Пароль мусить бути більше 8 букв').required('Пароль обов\\'язковий'),\n});\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await dispatch(loginUser({ email, password }));\n  \n      if (response.error) {\n        toast.error('Щось пішло не так. Перевірте е-пошту або введені вами дані ще раз');\n      } else {\n        navigate('/');\n        toast.success('Ви успішно залогінілись');\n      }\n    } catch (error) {\n      console.error('Помилка під час входу:', error);\n      toast.error('Помилка під час входу. Будь ласка, спробуйте знову.');\n    }\n  };\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <Formik initialValues={{ email: '', password: '' }} validationSchema={LoginSchema}>\n          <Content>\n            <Menu>\n              <StyledRegistrationLink to=\"/auth/register\" underline=\"none\">Реєстрація</StyledRegistrationLink>\n              <StyledLink to=\"/auth/login\" underline=\"none\">Вхід</StyledLink>\n            </Menu>\n            <Inputs>\n              <Field autoFocus name=\"email\" type=\"email\" placeholder=\"Е-пошта\" value={email} onChange={(e) => setEmail(e.target.value)} />\n              <ErrorText name=\"username\" component=\"div\" />\n              <PasswordInput>\n                <Field name=\"password\" type={showPassword ? 'text' : 'password'} placeholder=\"Пароль\" value={password} onChange={(e) => setPassword(e.target.value)} />\n                <ErrorText name=\"password\" component=\"div\" />\n                <PasswordToggle className={`${PasswordToggle} ${PasswordIcon}`} onClick={togglePasswordVisibility}>\n                  {showPassword ? (\n                  <PasswordIcon icon={faEyeSlash} width=\"18px\" />\n                ) : (\n                  <PasswordIcon icon={faEye} width=\"18px\" />\n                )}\n              </PasswordToggle>\n            </PasswordInput>\n              <LoginBtn type=\"submit\">Увійти</LoginBtn>\n              <ErrorText name=\"submit\" component=\"div\" />\n            </Inputs>\n          </Content>\n        </Formik>\n      </form>\n    </Container>\n  );\n};\n\nexport default Login;\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { login } from '../../redux/auth/authOperations';\n// import { useDispatch } from 'react-redux';\n// import {\n//   ErrorText,\n//   Menu,\n//   Inputs,\n//   Container,\n//   PasswordInput,\n//   Content,\n//   LoginBtn,\n//   StyledRegistrationLink,\n//   StyledLink,\n//   PasswordToggle,\n//   PasswordIcon,\n// } from './LoginForm.styled';\n// import { setAccessToken } from '../../redux/auth/authSelectors';\n// import { Formik, Field } from 'formik';\n// import * as Yup from 'yup';\n// import { toast } from 'react-toastify';\n// import { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\n\n// const LoginSchema = Yup.object().shape({\n//   email: Yup.string().email('Е-пошта неправильний').required('Е-пошта обов\\'язкова'),\n//   password: Yup.string().min(8, 'Пароль мусить бути більше 8 букв').required('Пароль обов\\'язковий'),\n// });\n\n// function LoginPage() {\n//   const navigate = useNavigate();\n//   const dispatch = useDispatch();\n//   const [showPassword, setShowPassword] = useState(false);\n\n//   const togglePasswordVisibility = () => {\n//     setShowPassword(!showPassword);\n//   };\n\n//   const handleSubmit = async event => {\n//     event.preventDefault();\n//     const currentUser = {\n//       email: event.target.elements.email.value,\n//       password: event.target.elements.password.value,\n//     };\n\n//     const response = await dispatch(login(currentUser, setAccessToken));\n\n//     if (response.error) {\n//       toast.error();\n//     } else {\n//       navigate('/');\n//       toast.success('Ви успішно залогінились')\n//     }\n//   };\n\n//   return (\n//     <Container>\n//       <form onSubmit={handleSubmit}>\n//         <Formik initialValues={{ email: '', password: '' }} validationSchema={LoginSchema} >\n//           <Content>\n//             <Menu>\n//                 <StyledRegistrationLink to=\"/auth/register\" underline=\"none\">Реєстрація</StyledRegistrationLink>\n//                 <StyledLink to=\"/auth/login\" underline=\"none\">Вхід</StyledLink>\n//             </Menu>\n//             <Inputs>\n//               <Field autoFocus name=\"email\" type=\"email\" placeholder=\"Е-пошта\" />\n//               <ErrorText name=\"username\" component=\"div\" />\n//               {/* <PasswordInput>\n//                 <Field type=\"password\"\n//                   name=\"password\"\n//                   placeholder=\"Password\"\n//                 />\n//                 <ErrorText name=\"password\" component=\"div\" />\n//               </PasswordInput> */}\n\n\n//               <PasswordInput>\n//                 <Field name=\"password\" type={showPassword ? 'text' : 'password'} placeholder=\"Пароль\" />\n//                 <ErrorText name=\"password\" component=\"div\" />\n//                 <PasswordToggle className={`${PasswordToggle} ${PasswordIcon}`} onClick={togglePasswordVisibility}>\n//                   {showPassword ? (\n//                     <PasswordIcon icon={faEyeSlash} width=\"18px\" />\n//                   ) : (\n//                     <PasswordIcon icon={faEye} width=\"18px\" />\n//                   )}\n//                 </PasswordToggle>\n//               </PasswordInput>\n\n\n\n//               <LoginBtn type=\"submit\">Увійти</LoginBtn>\n//               <ErrorText name=\"submit\" component=\"div\" />\n//             </Inputs>\n//           </Content>\n//         </Formik>\n//       </form>\n//     </Container>\n//   );\n// }\n\n// export default LoginPage;","import { useParams } from \"react-router-dom\";\nimport RegisterForm from \"../components/RegisterForm/RegisterForm\";\nimport LoginForm from \"../components/LoginForm/LoginForm\";\n\nconst AuthPage = () => {\n  const { id } = useParams();\n  return (\n    <div>\n      {id === \"login\" && <LoginForm />}\n      {id === \"register\" && <RegisterForm />}\n    </div>\n  );\n};\nexport default AuthPage;\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","Menu","_templateObject3","StyledLink","Link","_templateObject4","StyledRegistrationLink","_templateObject5","Inputs","_templateObject6","PasswordInput","_templateObject7","PasswordToggle","input","_templateObject8","span","_templateObject9","PasswordIcon","FontAwesomeIcon","_templateObject10","RegisterBtn","svg","_templateObject11","button","_templateObject12","ErrorText","ErrorMessage","_templateObject13","a","_templateObject14","RegisterSchema","Yup","shape","name","required","email","min","password","navigate","useNavigate","dispatch","useDispatch","showPassword","setShowPassword","useState","_jsx","children","onSubmit","async","event","preventDefault","newUser","username","target","elements","value","register","error","toast","success","Formik","initialValues","validationSchema","_jsxs","to","underline","Field","autoFocus","type","placeholder","component","className","concat","onClick","togglePasswordVisibility","icon","faEyeSlash","width","faEye","LoginBtn","LoginSchema","Login","setEmail","setPassword","e","loginUser","console","onChange","AuthPage","id","useParams","LoginForm","RegisterForm"],"sourceRoot":""}