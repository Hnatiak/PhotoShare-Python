{"version":3,"file":"static/js/53.5d51c585.chunk.js","mappings":"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","sources":["components/MyProfile/MyProfile.styled.js","components/MyProfile/MyProfile.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const HeaderWrapper = styled.header`\n  justify-content: space-between;\n  padding: 7px 40px 10px 40px;\n  display: flex;\n  gap: 30px;\n  background: #fff;\n  top: 0;\n  position: sticky;\n  z-index: 3;\n  @media screen and (max-width: 780px) {\n    padding: 7px 20px 10px 20px;\n    align-items: center;\n  }\n`;\n\nexport const LogOut = styled.button`\n  background: red;\n  color: white;\n  border-radius: 15px;\n  font-size: 15px;\n  padding: 4px 20px;\n  border: none;\n  @media screen and (max-width: 780px) {\n    padding: 7px 20px 10px 20px;\n    align-items: center;\n  }\n`;\n\nexport const Img = styled.img`\n  border-radius: 50%;\n`;\n\nexport const Menu = styled.div`\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n  align-items: flex-end;\n`;\n\nexport const Question = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\n\nexport const MenuItem = styled.li`\n  line-height: 1.6em;\n  color: #111;\n`;\n\nexport const A = styled(NavLink)`\n  padding-bottom: 10px;\n  font-size: 14px;\n  font-weight: 700;\n  color: #9ac43c;\n  border-bottom: 1px dotted #e6e6e6;\n  @media (max-width: 780px) {\n    border-bottom: none;\n    margin: 0;\n    padding-bottom: 0;\n  }\n`;\n\nexport const Ab = styled(NavLink)``;\n\nexport const MenuLinkActive = styled(Link)(({ selected }) => ({\n  textTransform: 'uppercase',\n  fontSize: '13px',\n  fontWeight: selected ? '700' : '400',\n  color: selected ? '#9AC43C' : '#111',\n  textDecoration: 'none',\n  '&:hover': {\n    color: '#9AC43C',\n  },\n}));\n\nexport const AboutUl = styled.ul`\n  position: absolute;\n  z-index: 3;\n  display: block;\n  color: white;\n  min-width: 180px;\n  padding: 0;\n  margin-top: 2px;\n  background: #222;\n  border: none;\n  opacity: inherit;\n  @media screen and (max-width: 780px) {\n    right: 0;\n    left: auto;\n    margin-right: 10px;\n  }\n`;\n\nexport const AboutA = styled(Link)`\n  text-transform: uppercase;\n  padding: 10px 15px 10px 15px;\n  display: block;\n  &:hover {\n    cursor: pointer;\n    background: #9ac43c;\n  }\n`;\n\nexport const MenuDiv = styled.div`\n  display: flex;\n  gap: 15px;\n  margin-top: 30px;\n  color: #9AC43C;\n  align-items: center;\n`;\n\n\nexport const StyledLink = styled(Link)`\n  left: 160px;\n  top: 40px;\n  font-style: normal;\n  font-weight: var(--fontWeight500);\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: #111;\n`;","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateUser } from '../../redux/users/userOperations';\nimport { logout } from '../../redux/auth/authOperations';\nimport { toast } from 'react-toastify';\nimport { Img, StyledLink, LogOut } from './MyProfile.styled';\n\nconst MyProfile = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isLoggedInUser = useSelector(state => state.auth.isLoggedIn);\n  const user = useSelector(state => state.user.user);\n\n  const [editMode, setEditMode] = useState(false);\n  const [userData, setUserData] = useState({\n    username: user?.username || '',\n    phone: user?.phone || '',\n    birthday: user?.birthday || '',\n  });\n\n  useEffect(() => {\n    setUserData({\n      username: user?.username || '',\n      phone: user?.phone || '',\n      birthday: user?.birthday || '',\n    });\n  }, [user]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setUserData(prevUserData => ({\n      ...prevUserData,\n      [name]: value,\n    }));\n  };\n\n  const handleUpdateUser = async () => {\n    try {\n      await dispatch(updateUser({ userId: user.id, userData })).unwrap();\n      setEditMode(false);\n      toast.success('Ваш профіль успішно оновлено');\n    } catch (error) {\n      toast.error('Помилка під час оновлення профілю');\n      setUserData(prevUserData => ({\n        ...prevUserData,\n        username: user?.username || '',\n        phone: user?.phone || '',\n        birthday: user?.birthday || '',\n      }));\n    }\n  };\n\n  const handleLogout = async () => {\n    try {\n      await dispatch(logout());\n      navigate('/');\n      toast.success('Ви успішно розлогінились');\n    } catch (error) {\n      console.log('Сталася помилка під час виходу:', error);\n      toast.error('Під час розлогінення сталася помилка');\n    }\n  };\n\n  return (\n    <div>\n      {user && (\n        <div>\n          {isLoggedInUser && (\n            <div>\n              <Img src={user.avatar} alt=\"\" />\n              <div>\n                <label htmlFor=\"username\">Ваше ім'я</label>\n                {editMode ? (\n                  <input\n                    type=\"text\"\n                    id=\"username\"\n                    name=\"username\"\n                    value={userData.username}\n                    onChange={handleInputChange}\n                  />\n                ) : (\n                  <p>{userData.username} <button onClick={() => setEditMode(true)}>Edit</button></p>\n                )}\n\n                <label htmlFor=\"email\">Ваша емейл:</label><p>{user.email}</p>\n                <label htmlFor=\"role\">Ваша роль:</label><p>{user.role}</p>\n\n                <label htmlFor=\"phone\">Ваш номер телефону:</label>\n                {editMode ? (\n                  <input\n                    type=\"tel\"\n                    id=\"phone\"\n                    name=\"phone\"\n                    value={userData.phone}\n                    onChange={handleInputChange}\n                  />\n                ) : (\n                  <p>{userData.phone} <button onClick={() => setEditMode(true)}>Edit</button></p>\n                )}\n\n                <label htmlFor=\"birthday\">Ваша дата дня народження:</label>\n                {editMode ? (\n                  <input\n                    type=\"date\"\n                    id=\"birthday\"\n                    name=\"birthday\"\n                    value={userData.birthday}\n                    onChange={handleInputChange}\n                  />\n                ) : (\n                  <p>{userData.birthday} <button onClick={() => setEditMode(true)}>Edit</button></p>\n                )}\n              </div>\n\n              {editMode && (\n                <button type=\"submit\" onClick={handleUpdateUser}>Зберегти</button>\n              )}\n              <LogOut onClick={handleLogout}>Вийти</LogOut>\n            </div>\n          )}\n          {!isLoggedInUser && (\n            <div>\n              <div>Please Register Here: <StyledLink to=\"/auth/register\">Register</StyledLink></div>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MyProfile;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { updateUser } from '../../redux/users/userOperations';\n\n// const MyProfile = () => {\n//   const dispatch = useDispatch();\n//   const user = useSelector(state => state.auth.user);\n//   const isLoading = useSelector(state => state.auth.isLoading);\n//   const error = useSelector(state => state.auth.error);\n\n//   const [editMode, setEditMode] = useState(false);\n//   const [userData, setUserData] = useState({\n//     username: user?.username || '',\n//     phone: user?.phone || '',\n//     birthday: user?.birthday || '',\n//   });\n\n//   useEffect(() => {\n//     setUserData({\n//       username: user?.username || '',\n//       phone: user?.phone || '',\n//       birthday: user?.birthday || '',\n//     });\n//   }, [user]);\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setUserData(prevUserData => ({\n//       ...prevUserData,\n//       [name]: value,\n//     }));\n//   };\n\n//   const handleUpdateUser = async () => {\n//     try {\n//       await dispatch(updateUser({ userId: user.id, userData })).unwrap();\n//       setEditMode(false);\n//     } catch (error) {\n//       console.error('Error updating user:', error);\n//     }\n//   };\n\n//   const toggleEditMode = () => {\n//     setEditMode(prevMode => !prevMode);\n//   };\n\n//   return (\n//     <div>\n//       {/* {isLoading && <div>Loading...</div>} */}\n//       {/* {error && <div>Error: {error}</div>} */}\n//       {user && (\n//         <div>\n//           <button onClick={toggleEditMode}>{editMode ? 'Cancel' : 'Edit'}</button>\n//           {editMode ? (\n//             <div>\n//               <label htmlFor=\"username\">Username:</label>\n//               <input\n//                 type=\"text\"\n//                 id=\"username\"\n//                 name=\"username\"\n//                 value={userData.username}\n//                 onChange={handleInputChange}\n//               />\n//               <label htmlFor=\"phone\">Phone:</label>\n//               <input\n//                 type=\"tel\"\n//                 id=\"phone\"\n//                 name=\"phone\"\n//                 value={userData.phone}\n//                 onChange={handleInputChange}\n//               />\n//               <label htmlFor=\"birthday\">Birthday:</label>\n//               <input\n//                 type=\"date\"\n//                 id=\"birthday\"\n//                 name=\"birthday\"\n//                 value={userData.birthday}\n//                 onChange={handleInputChange}\n//               />\n//               <button onClick={handleUpdateUser}>Save Changes</button>\n//             </div>\n//           ) : (\n//             <div>\n//               <p>Username: {userData.username}</p>\n//               <p>Phone: {userData.phone}</p>\n//               <p>Birthday: {userData.birthday}</p>\n//             </div>\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default MyProfile;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { updateUser } from '../../redux/users/userOperations';\n\n// const MyProfile = () => {\n//   const dispatch = useDispatch();\n//   const user = useSelector(state => state.user.user);\n//   const isLoading = useSelector(state => state.user.isLoading);\n//   const error = useSelector(state => state.user.error);\n\n//   const [userData, setUserData] = useState({\n//     username: user?.username || '',\n//     phone: user?.phone || '',\n//     birthday: user?.birthday || '',\n//   });\n\n//   useEffect(() => {\n//     setUserData({\n//       username: user?.username || '',\n//       phone: user?.phone || '',\n//       birthday: user?.birthday || '',\n//     });\n//   }, [user]);\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setUserData(prevUserData => ({\n//       ...prevUserData,\n//       [name]: value,\n//     }));\n//   };\n\n//   const handleUpdateUser = async () => {\n//     try {\n//       await dispatch(updateUser({ userId: user.id, userData })).unwrap();\n//     } catch (error) {\n//       console.error('Error updating user:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {isLoading && <div>Loading...</div>}\n//       {error && <div>Error: {error}</div>}\n//       {user && (\n//         <div>\n//           <label htmlFor=\"username\">Username:</label>\n//           <input\n//             type=\"text\"\n//             id=\"username\"\n//             name=\"username\"\n//             value={userData.username}\n//             onChange={handleInputChange}\n//           />\n//           <label htmlFor=\"phone\">Phone:</label>\n//           <input\n//             type=\"tel\"\n//             id=\"phone\"\n//             name=\"phone\"\n//             value={userData.phone}\n//             onChange={handleInputChange}\n//           />\n//           <label htmlFor=\"birthday\">Birthday:</label>\n//           <input\n//             type=\"date\"\n//             id=\"birthday\"\n//             name=\"birthday\"\n//             value={userData.birthday}\n//             onChange={handleInputChange}\n//           />\n//           <button onClick={handleUpdateUser}>Save Changes</button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default MyProfile;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { setName, setAvatar, setEmail, setRole, setPhone, setBirthday, setID } from '../../redux/users/userSelectors';\n// import { updateUser } from '../../redux/users/userOperations';\n// import { Img, StyledLink, LogOut } from './MyProfile.styled';\n// import { logout } from '../../redux/auth/authOperations';\n// import { toast } from 'react-toastify';\n\n\n// const MyProfile = () => {\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n//   const isLoggedInUser = useSelector(state => state.auth.isLoggedIn);\n\n//   const username = useSelector(setName);\n//   const avatar = useSelector(setAvatar);\n//   const email = useSelector(setEmail);\n//   const role = useSelector(setRole);\n//   const phone = useSelector(setPhone);\n//   const birthday = useSelector(setBirthday);\n//   const userId = useSelector(setID);\n\n//   const [editMode, setEditMode] = useState(false);\n//   const [userData, setUserData] = useState({\n//     username: username,\n//     phone: phone,\n//     birthday: birthday,\n//   });\n\n//   // const handleInputChange = (e) => {\n//   //   const { name, value } = e.target;\n//   //   setUserData({\n//   //     ...userData,\n//   //     [name]: value,\n//   //   });\n//   // };\n\n//   // const handleInputChange = (e) => {\n//   //   const { name, value } = e.target;\n//   //   setUserData(prevUserData => ({\n//   //     ...prevUserData,\n//   //     [name]: value,\n//   //   }));\n//   // };\n\n//   const handleUpdateUser = async () => {\n//     try {\n//       await dispatch(updateUser({ userId, userData }));\n//       // setEditMode(false);\n//       toast.success('Ваш профіль успішно оновлено');\n//     } catch (error) {\n//       toast.error('Помилка під час оновлення профілю');\n\n//       const previousUserData = {\n//         username: username,\n//         phone: phone,\n//         birthday: birthday,\n//       };\n//       setUserData(previousUserData);\n//     }\n//   };\n\n//   // const handleUpdateUser = async () => {\n//   //   try {\n//   //     await dispatch(updateUser({ userId, userData }));\n//   //     setEditMode(false);\n//   //     toast.success('Ваш профіль успішно оновлено');  \n//   //   } catch (error) {\n//   //     toast.error('Помилка під час оновлення профілю');\n//   //   }\n//   // };\n\n//   const handleLogout = async () => {\n//     try {\n//       await dispatch(logout());\n//       navigate('/');\n//       toast.success('Ви успішно розлогінились');\n//     } catch (error) {\n//       console.log('Сталася помилка під час виходу:', error);\n//       toast.error('Під час розлогінення сталася помилка');\n//     }\n//   };\n\n//   return (\n//     <div>\n//         <div>\n//             {isLoggedInUser &&\n//                 <div>\n//                     <Img src={avatar} alt=\"\" />\n//                     <div>\n//                         <label htmlFor=\"username\">Ваше ім'я</label>\n//                         {editMode ? (\n//                           <input\n//                             type=\"text\"\n//                             id=\"username\"\n//                             name=\"username\"\n//                             value={userData.username}\n//                             // onChange={handleInputChange}\n//                           />\n//                         ) : (\n//                           <p>{userData.username} <button onClick={() => setEditMode(true)}>Edit</button></p>\n//                         )}\n\n//                         <label htmlFor=\"email\">Ваша емейл:</label><p>{email}</p>\n//                         <label htmlFor=\"role\">Ваша роль:</label><p>{role}</p>\n\n//                         <label htmlFor=\"phone\">Ваш номер телефону:</label>\n//                         {editMode ? (\n//                           <input\n//                             type=\"tel\"\n//                             id=\"phone\"\n//                             name=\"phone\"\n//                             value={userData.phone}\n//                             // onChange={handleInputChange}\n//                           />\n//                         ) : (\n//                           <p>{userData.phone} <button onClick={() => setEditMode(true)}>Edit</button></p>\n//                         )}\n\n//                         <label htmlFor=\"birthday\">Ваша дата дня народження:</label>\n//                         {editMode ? (\n//                           <input\n//                             type=\"date\"\n//                             id=\"birthday\"\n//                             name=\"birthday\"\n//                             value={userData.birthday}\n//                             // onChange={handleInputChange}\n//                           />\n//                         ) : (\n//                           <p>{userData.birthday} <button onClick={() => setEditMode(true)}>Edit</button></p>\n//                         )}\n//                     </div>\n\n//                     {editMode && (\n//                       <button type=\"submit\" onClick={handleUpdateUser}>Зберегти</button>\n//                     )}\n//                     <LogOut onClick={handleLogout}>Вийти</LogOut>\n//                 </div>\n//             }\n//             {!isLoggedInUser &&\n//                 <div>\n//                     <div>Please Register Here: <StyledLink to=\"/auth/register\">Register</StyledLink></div>\n//                 </div>\n//             }\n//         </div>\n//     </div>\n//   );\n// };\n\n// export default MyProfile;"],"names":["styled","header","_templateObject","_taggedTemplateLiteral","LogOut","button","_templateObject2","Img","img","_templateObject3","StyledLink","div","_templateObject4","_templateObject5","li","_templateObject6","NavLink","_templateObject7","_templateObject8","Link","_ref","selected","textTransform","fontSize","fontWeight","color","textDecoration","ul","_templateObject9","_templateObject10","_templateObject11","_templateObject12","MyProfile","dispatch","useDispatch","navigate","useNavigate","isLoggedInUser","useSelector","state","auth","isLoggedIn","user","editMode","setEditMode","useState","userData","setUserData","username","phone","birthday","useEffect","handleInputChange","e","name","value","target","prevUserData","_jsx","children","_jsxs","src","avatar","alt","htmlFor","type","id","onChange","onClick","email","role","async","updateUser","userId","unwrap","toast","success","error","logout","console","log","to"],"sourceRoot":""}