{"version":3,"file":"static/js/214.d7ce190f.chunk.js","mappings":"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","sources":["redux/users/userSelectors.js","components/MyProfile/MyProfile.styled.js","components/MyProfile/MyProfile.jsx"],"sourcesContent":["// export const setID = state => state.user.user.id;\n// export const setName = state => state.user.username;\n// export const setAvatar = state => state.user.user.avatar;\n// export const setEmail = state => state.user.user.email;\n// export const setRole = state => state.user.user.role;\n// export const setPhone = state => state.user.user.phone;\n// export const setBirthday = state => state.user.user.birthday;\nexport const selectUser = state => state.user.user;\n\nexport const selectUserAuth = state => state.auth.user;","import styled from '@emotion/styled';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const HeaderWrapper = styled.header`\n  justify-content: space-between;\n  padding: 7px 40px 10px 40px;\n  display: flex;\n  gap: 30px;\n  background: #fff;\n  top: 0;\n  position: sticky;\n  z-index: 3;\n  @media screen and (max-width: 780px) {\n    padding: 7px 20px 10px 20px;\n    align-items: center;\n  }\n`;\n\nexport const LogOut = styled.button`\n  background: red;\n  color: white;\n  border-radius: 15px;\n  font-size: 15px;\n  padding: 4px 20px;\n  border: none;\n  @media screen and (max-width: 780px) {\n    padding: 7px 20px 10px 20px;\n    align-items: center;\n  }\n`;\n\nexport const Img = styled.img`\n  border-radius: 50%;\n  width: 60%;\n  padding: 5px;\n  border: 3px solid #9AC43C;\n`;\n\nexport const Menu = styled.div`\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n  align-items: flex-end;\n`;\n\nexport const Question = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\n\nexport const MenuItem = styled.li`\n  line-height: 1.6em;\n  color: #111;\n`;\n\nexport const A = styled(NavLink)`\n  padding-bottom: 10px;\n  font-size: 14px;\n  font-weight: 700;\n  color: #9ac43c;\n  border-bottom: 1px dotted #e6e6e6;\n  @media (max-width: 780px) {\n    border-bottom: none;\n    margin: 0;\n    padding-bottom: 0;\n  }\n`;\n\nexport const Ab = styled(NavLink)``;\n\nexport const Div = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 45px;\n`;\n\nexport const LastDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n`;\n\nexport const EditBtn = styled.button`\n    font-style: normal;\n    font-weight: var(--fontWeight500);\n    font-size: 16px;\n    line-height: 21px;\n    text-align: center;\n    letter-spacing: -0.02em;\n    width: 100%;\n    height: 29px;\n    margin-top: 10px;\n    background: rgb(154, 196, 60);\n    border-radius: 15px;\n    @media screen and (max-width: 768px) {\n        width: 287px;\n    }\n`;\n\nexport const EditPhoto = styled.label`\n    font-style: normal;\n    font-weight: var(--fontWeight500);\n    font-size: 16px;\n    line-height: 21px;\n    text-align: center;\n    letter-spacing: -0.02em;\n    width: 100%;\n    height: 29px;\n    margin-top: 10px;\n    background: rgb(154, 196, 60);\n    color: black;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 15px;\n    margin-bottom: 15px;\n    cursor: pointer;\n    @media screen and (max-width: 768px) {\n        width: 287px;\n    }\n`;\n\n\nexport const DivStyles = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 60vh;\n  justify-content: center;\n`;\n\n\n\n\n\n\nexport const FileInputWrapper = styled.label`\n  display: inline-block;\n  margin-top: 10px;\n  width: 24px;\n  color: black;\n  height: 24px;\n  border-radius: 15px;\n  background: rgb(154, 196, 60);\n  font-size: 18px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n`;\n\nexport const FileInput = styled.input`\n  display: none;\n`;\n\n\n\n\nexport const DivPhoto = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 15%;\n`;\n\nexport const DivEdit = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\n\nexport const AboutA = styled(Link)`\n  text-transform: uppercase;\n  padding: 10px 15px 10px 15px;\n  display: block;\n  &:hover {\n    cursor: pointer;\n    background: #9ac43c;\n  }\n`;\n\nexport const MenuDiv = styled.div`\n  display: flex;\n  gap: 15px;\n  margin-top: 30px;\n  color: #9AC43C;\n  align-items: center;\n`;\n\n\nexport const StyledLink = styled(Link)`\n  left: 160px;\n  top: 40px;\n  font-style: normal;\n  font-weight: var(--fontWeight500);\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: #111;\n`;","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../redux/auth/authOperations';\nimport { updateUser, updateUserAvatar } from '../../redux/users/userOperations';\nimport { selectUser } from '../../redux/users/userSelectors';\nimport { toast } from 'react-toastify';\nimport { Img, StyledLink, LogOut, EditBtn, Div, DivPhoto, DivEdit, EditPhoto, FileInput, LastDiv, DivStyles } from './MyProfile.styled';\n\nconst MyProfile = () => {\n  const isLoggedInUser = useSelector(state => state.auth.isLoggedIn);\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [avatarFile, setAvatarFile] = useState(null);\n  const [editMode, setEditMode] = useState(false);\n  const [userData, setUserData] = useState({\n    username: user?.username || '',\n    phone: user?.phone || '',\n    birthday: user?.birthday || '',\n  });\n\n  useEffect(() => {\n    setUserData({\n      username: user?.username || '',\n      phone: user?.phone || '',\n      birthday: user?.birthday || '',\n    });\n  }, [user]);\n\n  const handleFileChange = (event) => {\n    setAvatarFile(event.target.files[0]);\n  };\n\n  const handleUpdateAvatar = async () => {\n    if (avatarFile) {\n      await dispatch(updateUserAvatar({ userId: user.id, avatarFile })).unwrap();\n      toast.success('Ваш аватар успішно оновлено');\n    } else {\n      toast.error('Ви не вибрали файл або сталася помилка');\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setUserData(prevUserData => ({\n      ...prevUserData,\n      [name]: value,\n    }));\n  };\n\n  const handleUpdateUser = async () => {\n    try {\n      await dispatch(updateUser({ userId: user.id, userData })).unwrap();\n      setEditMode(false);\n      toast.success('Ваш профіль успішно оновлено');\n    } catch (error) {\n      console.error('Помилка під час оновлення профілю:', error);\n      toast.error('Помилка під час оновлення профілю');\n    }\n  };\n\n  const handleLogout = async () => {\n    try {\n      await dispatch(logout());\n      navigate('/');\n      toast.success('Ви успішно вийшли з облікового запису');\n    } catch (error) {\n      console.error('Помилка під час виходу з облікового запису:', error);\n      toast.error('Помилка під час виходу з облікового запису');\n    }\n  };\n\n  return (\n    <div>\n      {isLoggedInUser && (\n        <DivStyles>\n          <Div>\n            <DivPhoto>\n              <Img src={user.avatar} alt=\"Avatar\" />\n              <FileInput type=\"file\" id=\"file\" onChange={handleFileChange} />\n              <EditPhoto htmlFor=\"file\">Змінити фото</EditPhoto>\n              <button onClick={handleUpdateAvatar}>Оновити аватар</button>\n            </DivPhoto>\n            <DivEdit>\n              <label htmlFor=\"username\">Ваше ім'я</label>\n              {editMode ? (\n                <input type=\"text\" id=\"username\" name=\"username\" value={userData.username} onChange={handleInputChange} />\n              ) : (\n                <p>{userData.username} <EditBtn onClick={() => setEditMode(true)}>Редагувати</EditBtn></p>\n              )}\n\n              <label htmlFor=\"email\">Ваша електронна пошта:</label><p>{user.email}</p>\n              <label htmlFor=\"role\">Ваша роль:</label><p>{user.role}</p>\n\n              <label htmlFor=\"phone\">Ваш номер телефону:</label>\n              {editMode ? (\n                <input type=\"tel\" id=\"phone\" name=\"phone\" value={userData.phone} onChange={handleInputChange} />\n              ) : (\n                <p>{userData.phone} <EditBtn onClick={() => setEditMode(true)}>Редагувати</EditBtn></p>\n              )}\n              <label htmlFor=\"birthday\">Ваша дата народження:</label>\n              {editMode ? (\n                <input type=\"date\" id=\"birthday\" name=\"birthday\" value={userData.birthday} onChange={handleInputChange} />\n              ) : (\n                <p>{userData.birthday} <EditBtn onClick={() => setEditMode(true)}>Редагувати</EditBtn></p>\n              )}\n              {editMode && (\n                <EditBtn type=\"submit\" onClick={handleUpdateUser}>Зберегти</EditBtn>\n              )}\n            </DivEdit>\n          </Div>\n          <LastDiv>\n            <LogOut onClick={handleLogout} style={{ marginRight: '15px' }}>Вийти</LogOut>\n            <StyledLink to=\"/\">Головна</StyledLink>\n          </LastDiv>\n        </DivStyles>\n      )}\n      {!isLoggedInUser && (\n        <div>\n          <div>Будь ласка, <StyledLink to=\"/auth/register\">зареєструйтеся</StyledLink> тут</div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MyProfile;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { updateUser } from '../../redux/users/userOperations';\n// import { logout } from '../../redux/auth/authOperations';\n// import { toast } from 'react-toastify';\n// import { Img, StyledLink, LogOut, EditBtn, Div, DivPhoto, DivEdit, EditPhoto, FileInput, LastDiv, DivStyles } from './MyProfile.styled';\n// import { updateUserAvatar } from '../../redux/users/userOperations';\n// import { selectUser } from '../../redux/users/userSelectors';\n\n// const MyProfile = ({ stockAvatar, onClose }) => {\n//   const isLoggedInUser = useSelector(state => state.auth.isLoggedIn);\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n//   // eslint-disable-next-line\n//   const [selectedFile, setSelectedFile] = useState(null);\n//   // eslint-disable-next-line\n//   const [imageUrl, setImageUrl] = useState('');  \n//   // const user = useSelector(state => state.user.user);\n//   const user = useSelector(selectUser);\n\n//   // const user = useSelector(state => state.auth.user);\n\n\n//   const [avatarFile, setAvatarFile] = useState(null);\n\n//   const handleFileChange = (event) => {\n//     setAvatarFile(event.target.files[0]);\n//   };\n\n//   const handleUpdateAvatar = async () => {\n//     if (avatarFile) {\n//       await dispatch(updateUserAvatar({ userId: user.id, avatarFile })).unwrap();\n//       toast.success('Ваш профіль успішно оновлено');\n//     } else {\n//       toast.error('Ви не вибрали файл, або щось пішло не так');\n//     }\n//   };\n\n//   const [editMode, setEditMode] = useState(false);\n//   const [userData, setUserData] = useState({\n//     username: user?.username || '',\n//     phone: user?.phone || '',\n//     birthday: user?.birthday || '',\n//   });\n\n//   useEffect(() => {\n//     if (selectedFile) {\n//       const reader = new FileReader();\n\n//       reader.onload = event => {\n//         setImageUrl(event.target.result);\n//       };\n\n//       reader.readAsDataURL(selectedFile);\n//     }\n//   }, [selectedFile]);\n\n//   useEffect(() => {\n//     setUserData({\n//       username: user?.username || '',\n//       phone: user?.phone || '',\n//       birthday: user?.birthday || '',\n//     });\n//   }, [user]);\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setUserData(prevUserData => ({\n//       ...prevUserData,\n//       [name]: value,\n//     }));\n//   };\n\n//   const handleUpdateUser = async () => {\n//     try {\n//       await dispatch(updateUser({ userId: user.id, userData })).unwrap()\n//         .then(() => {\n//           setUserData(userData);\n//           setEditMode(false);\n//           toast.success('Ваш профіль успішно оновлено');\n//         });      \n//     } catch (error) {\n//       toast.error('Помилка під час оновлення профілю');\n//       setUserData(prevUserData => ({\n//         ...prevUserData,\n//         username: user?.username || '',\n//         phone: user?.phone || '',\n//         birthday: user?.birthday || '',\n//       }));\n//     }\n//   };\n\n//   const handleLogout = async () => {\n//     try {\n//       await dispatch(logout());\n//       navigate('/');\n//       toast.success('Ви успішно розлогінились');\n//     } catch (error) {\n//       console.log('Сталася помилка під час виходу:', error);\n//       toast.error('Під час розлогінення сталася помилка');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       {user && (\n//         <div>\n//           {isLoggedInUser && (\n//             <DivStyles>\n//               <Div>\n//                 <DivPhoto>\n//                   <Img src={user.avatar} alt=\"\" />\n//                   <FileInput type=\"file\" id=\"file\" onChange={handleFileChange} />\n//                   <EditPhoto htmlFor=\"file\">Edit Photo</EditPhoto>\n//                   <button onClick={handleUpdateAvatar}>Update Avatar</button>\n//                 </DivPhoto>\n//                 <DivEdit>\n//                   <label htmlFor=\"username\">Ваше ім'я</label>\n//                   {editMode ? (\n//                     <input type=\"text\" id=\"username\" name=\"username\" value={userData.username} onChange={handleInputChange} />\n//                   ) : (\n//                     <p>{userData.username} <EditBtn onClick={() => setEditMode(true)}>Edit</EditBtn></p>\n//                   )}\n\n//                   <label htmlFor=\"email\">Ваша емейл:</label><p>{user.email}</p>\n//                   <label htmlFor=\"role\">Ваша роль:</label><p>{user.role}</p>\n\n//                   <label htmlFor=\"phone\">Ваш номер телефону:</label>\n//                   {editMode ? (\n//                     <input type=\"tel\" id=\"phone\" name=\"phone\" value={userData.phone} onChange={handleInputChange} />\n//                   ) : (\n//                     <p>{userData.phone} <EditBtn onClick={() => setEditMode(true)}>Edit</EditBtn></p>\n//                   )}\n//                   <label htmlFor=\"birthday\">Ваша дата дня народження:</label>\n//                   {editMode ? (\n//                     <input type=\"date\" id=\"birthday\" name=\"birthday\" value={userData.birthday} onChange={handleInputChange} />\n//                   ) : (\n//                     <p>{userData.birthday} <EditBtn onClick={() => setEditMode(true)}>Edit</EditBtn></p>\n//                   )}\n//                   {editMode && (\n//                     <EditBtn type=\"submit\" onClick={handleUpdateUser}>Зберегти</EditBtn>\n//                   )}\n//                 </DivEdit>\n//               </Div>\n//               <LastDiv>\n//                 <LogOut onClick={handleLogout} style={{ marginRight: '15px' }}>Вийти</LogOut>\n//                 <StyledLink to=\"/\">Головна</StyledLink>\n//               </LastDiv>\n//             </DivStyles>\n//           )}\n//           {!isLoggedInUser && (\n//             <div>\n//               <div>Please Register Here: <StyledLink to=\"/auth/register\">Register</StyledLink></div>\n//             </div>\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default MyProfile;"],"names":["selectUser","state","user","styled","header","_templateObject","_taggedTemplateLiteral","LogOut","button","_templateObject2","Img","img","_templateObject3","Div","div","_templateObject4","_templateObject5","li","_templateObject6","NavLink","_templateObject7","_templateObject8","_templateObject9","LastDiv","_templateObject10","EditBtn","_templateObject11","EditPhoto","label","_templateObject12","DivStyles","_templateObject13","FileInput","_templateObject14","input","_templateObject15","DivPhoto","_templateObject16","DivEdit","_templateObject17","StyledLink","Link","_templateObject18","_templateObject19","_templateObject20","MyProfile","isLoggedInUser","useSelector","auth","isLoggedIn","dispatch","useDispatch","navigate","useNavigate","avatarFile","setAvatarFile","useState","editMode","setEditMode","userData","setUserData","username","phone","birthday","useEffect","handleInputChange","e","name","value","target","prevUserData","_jsxs","children","_jsx","src","avatar","alt","type","id","onChange","event","files","htmlFor","onClick","async","updateUserAvatar","userId","unwrap","toast","success","error","email","role","updateUser","console","logout","style","marginRight","to"],"sourceRoot":""}