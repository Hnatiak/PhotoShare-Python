{"version":3,"file":"static/js/46.094c2bc2.chunk.js","mappings":"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","sources":["redux/photos/photoOperations.js","redux/photos/photoSelectors.js","components/Middle/Middle.styled.js","components/Middle/Photos/Photos.styled.js","components/Middle/Photos/Photos.jsx","components/Middle/Middle.jsx","pages/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\n// import { getUserData } from '../auth/authOperations';\n\n\n// export const createPhoto = (photoData) => async (dispatch, getState) => {\n//     try {\n//       const state = getState();\n//       const token = state.auth.access_token;\n//       const headers = {\n//         Authorization: `Bearer ${token}`\n//       };\n  \n//       // Переконайтеся, що photoData містить необхідні поля\n//       const body = {\n//         description: photoData.description,\n//         tags: photoData.tags\n//       };\n  \n//       const response = await axios.post('/api/photos', body, { headers });\n//       dispatch({ type: 'photo/photoCreated', payload: response.data });\n//     } catch (error) {\n//       console.error('Error creating photo:', error);\n//     }\n//   };\n\n\n\n// export const createPhoto = (photoData) => async (dispatch, getState) => {\n//     try {\n//       const state = getState();\n//       const token = state.auth.access_token;\n//       const headers = {\n//         Authorization: `Bearer ${token}`\n//       };\n  \n//       const response = await axios.post('/api/photos', photoData, { headers });\n//       dispatch({ type: 'photo/photoCreated', payload: response.data });\n//     } catch (error) {\n//       console.error('Error creating photo:', error);\n//     }\n//   };\n\n\n\n\nexport const createPhoto = (photoData) => async (dispatch, getState) => {\n    try {\n      const state = getState();\n      const token = state.auth.access_token;\n      const headers = {\n        Authorization: `Bearer ${token}`,\n        'Content-Type': 'multipart/form-data'\n      };\n  \n      const response = await axios.post('/api/photos', photoData, { headers });\n      dispatch({ type: 'photo/photoCreated', payload: response.data });\n    } catch (error) {\n      console.error('Error creating photo:', error);\n      throw error;\n    }\n  };","export const selectPhotos = (state) => state.photo.photos;","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport Modal from 'react-modal';\n\nexport const ModalComponent = styled(Modal)`\n    display: flex;\n    height: 100vh;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const Div = styled.div`\n  display: flex;\n  height: 60vh;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const DivContent = styled.div`\n  margin: 15px;\n  display: flex;\n  height: 60vh;\n  align-items: flex-end;\n  justify-content: flex-start;\n  flex-direction: row-reverse;\n`;\n\nexport const AddPhotoBtn = styled.button`\n    font-style: normal;\n    font-weight: var(--fontWeight500);\n    font-size: 14px;\n    line-height: 21px;\n    text-align: center;\n    letter-spacing: -0.02em;\n    width: 20%;\n    height: 49px;\n    margin-top: 24px;\n    background: rgb(154, 196, 60);\n    border-radius: 8px;\n    @media screen and (max-width: 768px) {\n        width: 287px;\n    }\n`;\n\nexport const A = styled(Link)`\n    transition: color 0.2s ease-in;\n    &:hover{\n        color: #9AC43C;\n    }\n`;\n\n\nexport const DivModal = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    &:hover{\n        color: #9AC43C;\n    }\n`;\n\n\nexport const FileInputWrapper = styled.label`\n  display: inline-block;\n  margin-top: 10px;\n  width: 24px;\n  color: black;\n  height: 24px;\n  border-radius: 15px;\n  background: rgb(154, 196, 60);\n  font-size: 18px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n`;\n\nexport const FileInput = styled.input`\n  display: none;\n`;\n\n\n\n\nexport const ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  width: 80%;\n  background: white;\n  padding: 35px;\n  border-radius: 25px;\n  border: 1px solid rgb(154, 196, 60);\n`;\n\nexport const Input = styled.input`\n  padding: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const Textarea = styled.textarea`\n  padding: 10px;\n  margin-bottom: 10px;\n  resize: none;\n  width: 300px;\n  height: 80px;\n`;\n\nexport const SubmitButton = styled.button`\n  padding: 10px 20px;\n  background-color: #007BFF;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n\n\nexport const EditPhoto = styled.label`\n    font-style: normal;\n    font-weight: var(--fontWeight500);\n    font-size: 16px;\n    line-height: 21px;\n    text-align: center;\n    letter-spacing: -0.02em;\n    width: 350px;\n    height: 49px;\n    margin-top: 10px;\n    background: rgb(154, 196, 60);\n    color: black;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 15px;\n    margin-bottom: 15px;\n    cursor: pointer;\n    @media screen and (max-width: 768px) {\n        width: 287px;\n    }\n`;\n\nexport const ImagePreview = styled.img `\n    width: 60%;\n`\n\n\nexport const CloseButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  width: 100%;\n`;\n\nexport const CloseButton = styled.button`\n  background-color: transparent;\n  border: none;\n  font-size: 16px;\n  cursor: pointer;\n  color: #333;\n  &:hover {\n    color: #000;\n  }\n`;","import styled from '@emotion/styled';\n\nexport const PhotoList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  padding: 0;\n`;\n\nexport const PhotoItem = styled.li`\n  margin: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  overflow: hidden;\n\n  img {\n    width: 100%;\n    height: auto;\n  }\n\n  p {\n    padding: 10px;\n    text-align: center;\n  }\n`;","import React from 'react';\nimport { PhotoItem, PhotoList } from './Photos.styled';\n\nconst Photos = ({ photos }) => {\n  return (\n    <PhotoList>\n      {photos.map((photo, index) => (\n        <PhotoItem key={index}>\n          <img name=\"photo\" src={photo.url} alt={photo.description} />\n          <p name=\"description\">{photo.description}</p>\n          <p name=\"tags\">{photo.tags}</p>\n        </PhotoItem>\n      ))}\n    </PhotoList>\n  );\n};\n\nexport default Photos;","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { createPhoto } from '../../redux/photos/photoOperations';\nimport { selectPhotos } from '../../redux/photos/photoSelectors';\nimport { A, Div, DivContent, AddPhotoBtn, ModalContent, Form, Input, Textarea, SubmitButton, ModalComponent, FileInput, EditPhoto, ImagePreview, CloseButtonWrapper, CloseButton } from './Middle.styled';\nimport Photos from './Photos/Photos';\nimport { toast } from 'react-toastify';\nimport Modal from 'react-modal';\n\nconst Middle = () => {\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const { register, handleSubmit } = useForm();\n  const dispatch = useDispatch();\n  const photos = useSelector(selectPhotos);\n\n  const openModal = () => {\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n    setSelectedFile(null);\n    setPreviewUrl(null);\n  };\n\n  const onFileChange = (e) => {\n    const file = e.target.files[0];\n    setSelectedFile(file);\n\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setPreviewUrl(reader.result);\n    };\n    reader.readAsDataURL(file);\n  };\n\n  const onSubmit = (data) => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('photo', selectedFile);\n      formData.append('description', data.description);\n      formData.append('tags', data.tags);\n\n      dispatch(createPhoto(formData))\n        .then(() => {\n          toast.success('Ваш пост успішно добавлено');\n          closeModal();\n        })\n        .catch((error) => {\n          toast.error(`Щось пішло не так, спробуйте ще раз: ${error.message}`);\n        });\n    } else {\n      toast.error('Будь ласка, додайте фото.');\n    }\n  };\n\n  Modal.setAppElement('#root');  // Ensure Modal is accessible\n\n  return (\n    <div>\n      {isLoggedIn && (\n        <DivContent>\n          <AddPhotoBtn type=\"button\" onClick={openModal}>Add Photo</AddPhotoBtn>\n\n          <ModalComponent isOpen={modalIsOpen} onRequestClose={closeModal} contentLabel=\"Add Photo Modal\">\n            <ModalContent>\n              <Form onSubmit={handleSubmit(onSubmit)}>\n                <CloseButtonWrapper>\n                    <h2 style={{ margin: '0px' }}>Add Post</h2>\n                    <CloseButton type=\"button\" onClick={closeModal}>✖</CloseButton>\n                </CloseButtonWrapper>\n                {previewUrl && <ImagePreview src={previewUrl} alt=\"Preview\" />}\n                <FileInput type=\"file\" id='file' name='photo' onChange={onFileChange} />\n                <EditPhoto htmlFor=\"file\">Add Photo</EditPhoto>\n                <Textarea name='description' placeholder=\"Enter description\" {...register('description')} />\n                <Input type=\"text\" name='tags' placeholder=\"Enter tags separated by comma\" {...register('tags')} />\n                <SubmitButton type=\"submit\">Submit</SubmitButton>\n              </Form>\n            </ModalContent>\n          </ModalComponent>\n        </DivContent>\n      )}\n      {!isLoggedIn && (\n        <Div>\n          <h1>Для того щоб почати тут щось робити, будь ласка <A to=\"/auth/register\">зареєструйся</A> спочатку</h1>\n        </Div>\n      )}\n      <Photos photos={photos} />\n    </div>\n  );\n};\n\nexport default Middle;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { useForm } from 'react-hook-form';\n// import { createPhoto } from '../../redux/photos/photoOperations';\n// import { selectPhotos } from '../../redux/photos/photoSelectors';\n// import { A, Div, DivContent, AddPhotoBtn, ModalContent, Form, Input, Textarea, SubmitButton, ModalComponent, FileInput, EditPhoto, ImagePreview } from './Middle.styled';\n// import Photos from './Photos/Photos';\n// import { toast } from 'react-toastify';\n\n// const Middle = () => {\n//   const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n//   const [modalIsOpen, setModalIsOpen] = useState(false);\n//   const [selectedFile, setSelectedFile] = useState(null);\n//   const [previewUrl, setPreviewUrl] = useState(null);\n//   const { register, handleSubmit } = useForm();\n//   const dispatch = useDispatch();\n//   const user = useSelector(state => state.auth.user);\n\n//   const openModal = () => {\n//     setModalIsOpen(true);\n//   };\n\n//   const closeModal = () => {\n//     setModalIsOpen(false);\n//     setSelectedFile(null);\n//     setPreviewUrl(null);\n//   };\n\n//   const onFileChange = (e) => {\n//     const file = e.target.files[0];\n//     setSelectedFile(file);\n\n//     const reader = new FileReader();\n//     reader.onloadend = () => {\n//       setPreviewUrl(reader.result);\n//     };\n//     reader.readAsDataURL(file);\n//   };\n\n//     const onSubmit = (data) => {\n//         if (selectedFile) {\n//             const formData = new FormData();\n//             formData.append('photo', selectedFile);\n//             formData.append('description', data.description);\n//             formData.append('tags', data.tags);\n\n//             dispatch(createPhoto(formData))\n//                 .then(() => {\n//                     toast.success('Ваш пост успішно добавлено');\n//                     closeModal();\n//                 })\n//                 .catch((error) => {\n//                     toast.error(`Щось пішло не так, спробуйте ще раз: ${error.message}`);\n//                 });\n//         } else {\n//             toast.error('Будь ласка, додайте фото.');\n//         }\n//     };\n\n//   const photos = useSelector(selectPhotos);\n\n//   return (\n//     <div>\n//       {isLoggedIn && (\n//         <DivContent>\n//           <AddPhotoBtn type=\"button\" onClick={openModal}>Add Photo</AddPhotoBtn>\n\n//           <ModalComponent isOpen={modalIsOpen} onRequestClose={closeModal} contentLabel=\"Add Photo Modal\">\n//             <ModalContent>\n//               <Form onSubmit={handleSubmit(onSubmit)}>\n//                 <h2>Add Post</h2>\n//                 {previewUrl && <ImagePreview src={previewUrl} alt=\"Preview\" />}\n//                 <FileInput type=\"file\" id='file' name='photo' onChange={onFileChange} />\n//                 <EditPhoto htmlFor=\"file\">Add Photo</EditPhoto>\n//                 <Textarea name='description' placeholder=\"Enter description\" />\n//                 <Input type=\"text\" name='tags' placeholder=\"Enter tags separated by comma\" />\n//                 <SubmitButton type=\"submit\">Submit</SubmitButton>\n//               </Form>\n//             </ModalContent>\n//           </ModalComponent>\n//         </DivContent>\n//       )}\n//       {!isLoggedIn && (\n//         <Div>\n//           <h1>Для того щоб почати тут щось робити, будь ласка <A to=\"/auth/register\">зареєструйся</A> спочатку</h1>\n//         </Div>\n//       )}\n//       <Photos photos={photos} />\n//     </div>\n//   );\n// };\n\n// export default Middle;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { useForm } from 'react-hook-form';\n// import { createPhoto } from '../../redux/photos/photoOperations';\n// import { selectPhotos } from '../../redux/photos/photoSelectors';\n// import { A, Div, DivContent, AddPhotoBtn, ModalContent, Form, Input, Textarea, SubmitButton, ModalComponent, FileInput, EditPhoto, ImagePreview } from './Middle.styled';\n// import Photos from './Photos/Photos';\n// import { toast } from 'react-toastify';\n\n// const Middle = () => {\n//   const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n//   const [modalIsOpen, setModalIsOpen] = useState(false);\n//   const [selectedFile, setSelectedFile] = useState(null);\n//   const [previewUrl, setPreviewUrl] = useState(null);\n//   const { register, handleSubmit } = useForm();\n//   const dispatch = useDispatch();\n//   const user = useSelector(state => state.auth.user);\n\n//   const openModal = () => {\n//     setModalIsOpen(true);\n//   };\n\n//   const closeModal = () => {\n//     setModalIsOpen(false);\n//     setSelectedFile(null);\n//     setPreviewUrl(null);\n//   };\n\n//   const onFileChange = (e) => {\n//     const file = e.target.files[0];\n//     setSelectedFile(file);\n\n//     const reader = new FileReader();\n//     reader.onloadend = () => {\n//       setPreviewUrl(reader.result);\n//     };\n//     reader.readAsDataURL(file);\n//   };\n\n//     const onSubmit = (data) => {\n//   if (selectedFile) {\n//     // Handle photo creation\n//     const formData = new FormData();\n//     formData.append('photo', selectedFile);\n//     formData.append('description', data.description);\n//     formData.append('tags', data.tags);\n//     dispatch(createPhoto(formData));\n//     toast.success('Ваш пост успішно добавлено');\n//   } else {\n//     toast.error('Щось пішло не так, спробуйте ще раз');\n//   }\n//   closeModal();\n// };\n\n//   const photos = useSelector(selectPhotos);\n\n//   return (\n//     <div>\n//       {isLoggedIn && (\n//         <DivContent>\n//           <AddPhotoBtn type=\"button\" onClick={openModal}>Add Photo</AddPhotoBtn>\n\n//           <ModalComponent isOpen={modalIsOpen} onRequestClose={closeModal} contentLabel=\"Add Photo Modal\">\n//             <ModalContent>\n//               <Form onSubmit={handleSubmit(onSubmit)}>\n//                 <h2>Add Post</h2>\n//                 {previewUrl && <ImagePreview name=\"photo\" src={previewUrl} alt=\"Preview\" />}\n//                 <FileInput type=\"file\" id=\"file\" {...register(\"photo\")} onChange={onFileChange} />\n//                 <EditPhoto htmlFor=\"file\" name=\"photo\">Add Photo</EditPhoto>\n//                 <Textarea name=\"description\" {...register(\"description\")} placeholder=\"Enter description\" />\n//                 <Input type=\"text\" name=\"tags\" {...register(\"tags\")} placeholder=\"Enter tags separated by comma\" />\n//                 <SubmitButton type=\"submit\">Submit</SubmitButton>\n//               </Form>\n//             </ModalContent>\n//           </ModalComponent>\n//         </DivContent>\n//       )}\n//       {!isLoggedIn && (\n//         <Div>\n//           <h1>Для того щоб почати тут щось робити, будь ласка <A to=\"/auth/register\">зареєструйся</A> спочатку</h1>\n//         </Div>\n//       )}\n//       <Photos photos={photos} />\n//     </div>\n//   );\n// };\n\n// export default Middle;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import { useSelector } from 'react-redux';\n// import { useForm } from 'react-hook-form';\n// import { A, Div, DivContent, AddPhotoBtn, ModalContent, Form, Input, Textarea, SubmitButton, ModalComponent, FileInput, EditPhoto, ImagePreview } from './Middle.styled';\n\n// const Middle = () => {\n//   const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n//   const [modalIsOpen, setModalIsOpen] = useState(false);\n//   // eslint-disable-next-line\n//   const [selectedFile, setSelectedFile] = useState(null);\n//   const [previewUrl, setPreviewUrl] = useState(null);\n//   const { register, handleSubmit } = useForm();\n\n//   const openModal = () => {\n//     setModalIsOpen(true);\n//   };\n\n//   const closeModal = () => {\n//     setModalIsOpen(false);\n//     setSelectedFile(null); // Clear the selected file when closing the modal\n//     setPreviewUrl(null); // Clear the preview URL when closing the modal\n//   };\n\n//   const onFileChange = (e) => {\n//     const file = e.target.files[0];\n//     setSelectedFile(file);\n\n//     // Create a URL for the selected file\n//     const reader = new FileReader();\n//     reader.onloadend = () => {\n//       setPreviewUrl(reader.result);\n//     };\n//     reader.readAsDataURL(file);\n//   };\n\n//   const onSubmit = (data) => {\n//     console.log(data);\n//     closeModal();\n//   };\n\n//   return (\n//     <div>\n//       {isLoggedIn && (\n//         <DivContent>\n//           <AddPhotoBtn type=\"button\" onClick={openModal}>Add Photo</AddPhotoBtn>\n\n//           <ModalComponent isOpen={modalIsOpen} onRequestClose={closeModal} contentLabel=\"Add Photo Modal\">\n//             <ModalContent>\n//               <Form onSubmit={handleSubmit(onSubmit)}>\n//                 <h2>Add Post</h2>\n//                 {previewUrl && <ImagePreview src={previewUrl} alt=\"Preview\" />}\n//                 <FileInput type=\"file\" id=\"file\" {...register(\"photo\")} onChange={onFileChange} />\n//                 <EditPhoto htmlFor=\"file\">Add Photo</EditPhoto>\n//                 <Textarea {...register(\"description\")} placeholder=\"Enter description\" />\n//                 <Input type=\"text\" {...register(\"tags\")} placeholder=\"Enter tags separated by comma\" />\n//                 <SubmitButton type=\"submit\">Submit</SubmitButton>\n//               </Form>\n//             </ModalContent>\n//           </ModalComponent>\n//         </DivContent>\n//       )}\n//       {!isLoggedIn && (\n//         <Div>\n//           <h1>Для того щоб почати тут щось робити, будь ласка <A to=\"/auth/register\">зареєструйся</A> спочатку</h1>\n//         </Div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Middle;","import Middle from '../components/Middle/Middle';\n// import Collaction from '../components/Home/Collaction/Collaction';\n// import Container from '../components/Home/Container/Container';\n// import Experience from '../components/Home/Experience/Experience';\n// import NewsContainer from '../components/Home/News/NewsContainer';\n\nconst HomePage = () => {\n  return (\n    <>\n      <Middle />\n      {/* <Collaction />\n      <Container />\n      <Experience />\n      <NewsContainer /> */}\n    </>\n  );\n};\n\nexport default HomePage;"],"names":["selectPhotos","state","photo","photos","ModalComponent","styled","Modal","_templateObject","_taggedTemplateLiteral","Div","div","_templateObject2","DivContent","_templateObject3","AddPhotoBtn","button","_templateObject4","A","Link","_templateObject5","FileInput","_templateObject6","label","_templateObject7","input","_templateObject8","ModalContent","_templateObject9","Form","form","_templateObject10","Input","_templateObject11","Textarea","textarea","_templateObject12","SubmitButton","_templateObject13","EditPhoto","_templateObject14","ImagePreview","img","_templateObject15","CloseButtonWrapper","_templateObject16","CloseButton","_templateObject17","PhotoList","ul","PhotoItem","li","_ref","_jsx","children","map","index","_jsxs","name","src","url","alt","description","tags","Middle","isLoggedIn","useSelector","auth","modalIsOpen","setModalIsOpen","useState","selectedFile","setSelectedFile","previewUrl","setPreviewUrl","register","handleSubmit","useForm","dispatch","useDispatch","closeModal","type","onClick","openModal","isOpen","onRequestClose","contentLabel","onSubmit","data","formData","FormData","append","photoData","async","getState","token","access_token","headers","Authorization","concat","payload","axios","post","error","console","then","toast","success","catch","message","style","margin","id","onChange","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","htmlFor","placeholder","to","Photos","HomePage","_Fragment"],"sourceRoot":""}