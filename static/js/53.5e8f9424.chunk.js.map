{"version":3,"file":"static/js/53.5e8f9424.chunk.js","mappings":"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","sources":["components/MyProfile/MyProfile.styled.js","components/MyProfile/MyProfile.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const HeaderWrapper = styled.header`\n  justify-content: space-between;\n  padding: 7px 40px 10px 40px;\n  display: flex;\n  gap: 30px;\n  background: #fff;\n  top: 0;\n  position: sticky;\n  z-index: 3;\n  @media screen and (max-width: 780px) {\n    padding: 7px 20px 10px 20px;\n    align-items: center;\n  }\n`;\n\nexport const LogOut = styled.button`\n  background: red;\n  color: white;\n  border-radius: 15px;\n  font-size: 15px;\n  padding: 4px 20px;\n  border: none;\n  @media screen and (max-width: 780px) {\n    padding: 7px 20px 10px 20px;\n    align-items: center;\n  }\n`;\n\nexport const Img = styled.img`\n  border-radius: 50%;\n`;\n\nexport const Menu = styled.div`\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n  align-items: flex-end;\n`;\n\nexport const Question = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\n\nexport const MenuItem = styled.li`\n  line-height: 1.6em;\n  color: #111;\n`;\n\nexport const A = styled(NavLink)`\n  padding-bottom: 10px;\n  font-size: 14px;\n  font-weight: 700;\n  color: #9ac43c;\n  border-bottom: 1px dotted #e6e6e6;\n  @media (max-width: 780px) {\n    border-bottom: none;\n    margin: 0;\n    padding-bottom: 0;\n  }\n`;\n\nexport const Ab = styled(NavLink)``;\n\nexport const MenuLinkActive = styled(Link)(({ selected }) => ({\n  textTransform: 'uppercase',\n  fontSize: '13px',\n  fontWeight: selected ? '700' : '400',\n  color: selected ? '#9AC43C' : '#111',\n  textDecoration: 'none',\n  '&:hover': {\n    color: '#9AC43C',\n  },\n}));\n\nexport const AboutUl = styled.ul`\n  position: absolute;\n  z-index: 3;\n  display: block;\n  color: white;\n  min-width: 180px;\n  padding: 0;\n  margin-top: 2px;\n  background: #222;\n  border: none;\n  opacity: inherit;\n  @media screen and (max-width: 780px) {\n    right: 0;\n    left: auto;\n    margin-right: 10px;\n  }\n`;\n\nexport const AboutA = styled(Link)`\n  text-transform: uppercase;\n  padding: 10px 15px 10px 15px;\n  display: block;\n  &:hover {\n    cursor: pointer;\n    background: #9ac43c;\n  }\n`;\n\nexport const MenuDiv = styled.div`\n  display: flex;\n  gap: 15px;\n  margin-top: 30px;\n  color: #9AC43C;\n  align-items: center;\n`;\n\n\nexport const StyledLink = styled(Link)`\n  left: 160px;\n  top: 40px;\n  font-style: normal;\n  font-weight: var(--fontWeight500);\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: #111;\n`;","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setName, setAvatar, setEmail, setRole, setPhone, setBirthday, setID } from '../../redux/users/userSelectors';\nimport { updateUser } from '../../redux/users/userOperations';\nimport { Img, StyledLink, LogOut } from './MyProfile.styled';\nimport { logout } from '../../redux/auth/authOperations';\nimport { toast } from 'react-toastify';\n\n\nconst MyProfile = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isLoggedInUser = useSelector(state => state.auth.isLoggedIn);\n\n  const username = useSelector(setName);\n  const avatar = useSelector(setAvatar);\n  const email = useSelector(setEmail);\n  const role = useSelector(setRole);\n  const phone = useSelector(setPhone);\n  const birthday = useSelector(setBirthday);\n  const userId = useSelector(setID);\n\n  const [editMode, setEditMode] = useState(false);\n  const [userData, setUserData] = useState({\n    username: username || '',\n    phone: phone || '',\n    birthday: birthday || '',\n  });\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setUserData({\n      ...userData,\n      [name]: value,\n    });\n  };\n\n  const handleUpdateUser = async () => {\n    try {\n      await dispatch(updateUser({ userId, userData }));\n      setEditMode(false);\n      toast.success('Ваш профіль успішно оновлено');\n    } catch (error) {\n      toast.error('Помилка під час оновлення профілю');\n    }\n  };\n\n  const handleLogout = async () => {\n    try {\n      await dispatch(logout());\n      navigate('/');\n      toast.success('Ви успішно розлогінились');\n    } catch (error) {\n      console.log('Сталася помилка під час виходу:', error);\n      toast.error('Під час розлогінення сталася помилка');\n    }\n  };\n\n  return (\n    <div>\n        <div>\n            {isLoggedInUser &&\n                <div>\n                    <Img src={avatar} alt=\"\" />\n                    <div>\n                        <label htmlFor=\"username\">Ваше ім'я</label>\n                        {editMode ? (\n                          <input\n                            type=\"text\"\n                            id=\"username\"\n                            name=\"username\"\n                            value={userData.username}\n                            onChange={handleInputChange}\n                          />\n                        ) : (\n                          <p>{username} <button onClick={() => setEditMode(true)}>Edit</button></p>\n                        )}\n\n                        <label htmlFor=\"email\">Ваша емейл:</label><p>{email}</p>\n                        <label htmlFor=\"role\">Ваша роль:</label><p>{role}</p>\n\n                        <label htmlFor=\"phone\">Ваш номер телефону:</label>\n                        {editMode ? (\n                          <input\n                            type=\"tel\"\n                            id=\"phone\"\n                            name=\"phone\"\n                            value={userData.phone}\n                            onChange={handleInputChange}\n                          />\n                        ) : (\n                          <p>{phone} <button onClick={() => setEditMode(true)}>Edit</button></p>\n                        )}\n\n                        <label htmlFor=\"birthday\">Ваша дата дня народження:</label>\n                        {editMode ? (\n                          <input\n                            type=\"date\"\n                            id=\"birthday\"\n                            name=\"birthday\"\n                            value={userData.birthday}\n                            onChange={handleInputChange}\n                          />\n                        ) : (\n                          <p>{birthday} <button onClick={() => setEditMode(true)}>Edit</button></p>\n                        )}\n                    </div>\n\n                    {editMode && (\n                      <button type=\"submit\" onClick={handleUpdateUser}>Зберегти</button>\n                    )}\n                    <LogOut onClick={handleLogout}>Вийти</LogOut>\n                </div>\n            }\n            {!isLoggedInUser &&\n                <div>\n                    <div>Please Register Here: <StyledLink to=\"/auth/register\">Register</StyledLink></div>\n                </div>\n            }\n        </div>\n    </div>\n  );\n};\n\nexport default MyProfile;\n\n\n\n// const MyProfile = () => {\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n//   const isLoggedInUser = useSelector(state => state.auth.isLoggedIn);\n\n//   const username = useSelector(setName);\n//   const avatar = useSelector(setAvatar);\n//   const email = useSelector(setEmail);\n//   const role = useSelector(setRole);\n//   const phone = useSelector(setPhone);\n//   const birthday = useSelector(setBirthday);\n//   const userId = useSelector(setID);\n\n//   const [editMode, setEditMode] = useState(false);\n//   const [userData, setUserData] = useState({\n//     username: username || '',\n//     phone: phone || '',\n//     birthday: birthday || '',\n//   });\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setUserData({\n//       ...userData,\n//       [name]: value,\n//     });\n//   };\n\n//   const handleUpdateUser = async () => {\n//     try {\n//       await dispatch(updateUser({ userId, userData }));\n//       setEditMode(false);\n//       toast.success('Ваш профіль успішно оновлено');\n//       // navigate('/');\n//     } catch (error) {\n//       toast.error('Помилка під час оновлення профілю');\n//     }\n//   };\n\n//   const handleLogout = async () => {\n//     try {\n//       await dispatch(logout());\n//       navigate('/');\n//       toast.success('Ви успішно розлогінились');\n//     } catch (error) {\n//       console.log('Сталася помилка під час виходу:', error);\n//       toast.error('Під час розлогінення сталася помилка');\n//     }\n//   };\n\n//   return (\n//     <div>\n//         <div>\n//             {isLoggedInUser &&\n//                 <div>\n//                     <Img src={avatar} alt=\"\" />\n//                     <div>\n//                         <label htmlFor=\"username\">Ваше ім'я</label>\n//                         {editMode ? (\n//                           <input\n//                             type=\"text\"\n//                             id=\"username\"\n//                             name=\"username\"\n//                             value={userData.username}\n//                             onChange={handleInputChange}\n//                           />\n//                         ) : (\n//                           <p>{username} <button onClick={() => setEditMode(true)}>Edit</button></p>\n//                         )}\n\n//                         <label htmlFor=\"email\">Ваша емейл:</label><p>{email}</p>\n//                         <label htmlFor=\"role\">Ваша роль:</label><p>{role}</p>\n\n//                         <label htmlFor=\"phone\">Ваш номер телефону:</label>\n//                         {editMode ? (\n//                           <input\n//                             type=\"tel\"\n//                             id=\"phone\"\n//                             name=\"phone\"\n//                             value={userData.phone}\n//                             onChange={handleInputChange}\n//                           />\n//                         ) : (\n//                           <p>{phone} <button onClick={() => setEditMode(true)}>Edit</button></p>\n//                         )}\n\n//                         <label htmlFor=\"birthday\">Ваша дата дня народження:</label>\n//                         {editMode ? (\n//                           <input\n//                             type=\"date\"\n//                             id=\"birthday\"\n//                             name=\"birthday\"\n//                             value={userData.birthday}\n//                             onChange={handleInputChange}\n//                           />\n//                         ) : (\n//                           <p>{birthday} <button onClick={() => setEditMode(true)}>Edit</button></p>\n//                         )}\n//                     </div>\n\n//                     {editMode && (\n//                       <button type=\"submit\" onClick={handleUpdateUser}>Зберегти</button>\n//                     )}\n//                     <LogOut onClick={handleLogout}>Вийти</LogOut>\n//                 </div>\n//             }\n//             {!isLoggedInUser &&\n//                 <div>\n//                     <div>Please Register Here: <StyledLink to=\"/auth/register\">Register</StyledLink></div>\n//                 </div>\n//             }\n//         </div>\n//     </div>\n//   );\n// };\n\n// export default MyProfile;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Можна залишити цей варіант:\n\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { setName, setAvatar, setEmail, setRole, setPhone, setBirthday, setID } from '../../redux/users/userSelectors';\n// import { updateUser } from '../../redux/users/userOperations';\n// import { Img, StyledLink, LogOut } from './MyProfile.styled';\n// import { logout } from '../../redux/auth/authOperations';\n// import { toast } from 'react-toastify';\n\n// const MyProfile = () => {\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n//   const isLoggedInUser = useSelector(state => state.auth.isLoggedIn);\n\n//   const username = useSelector(setName);\n//   const avatar = useSelector(setAvatar);\n//   const email = useSelector(setEmail);\n//   const role = useSelector(setRole);\n//   const phone = useSelector(setPhone);\n//   const birthday = useSelector(setBirthday);\n//   const userId = useSelector(setID);\n\n//   const [editMode, setEditMode] = useState(false);\n//   const [userData, setUserData] = useState({\n//     username: username || '',\n//     phone: phone || '',\n//     birthday: birthday || '',\n//   });\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setUserData({\n//       ...userData,\n//       [name]: value,\n//     });\n//   };\n\n//   const handleUpdateUser = async () => {\n//     try {\n//       await dispatch(updateUser({ userId, userData }));\n//       setEditMode(false);\n//       toast.success('Ваш профіль успішно оновлено');\n//     } catch (error) {\n//       toast.error('Помилка під час оновлення профілю');\n//     }\n//   };\n\n//   const handleLogout = async () => {\n//     try {\n//       await dispatch(logout());\n//       navigate('/');\n//       toast.success('Ви успішно розлогінились');\n//     } catch (error) {\n//       console.log('Сталася помилка під час виходу:', error);\n//       toast.error('Під час розлогінення сталася помилка');\n//     }\n//   };\n\n//   return (\n//     <div>\n//         <div>\n//             {isLoggedInUser &&\n//                 <div>\n//                     <Img src={avatar} alt=\"\" />\n//                     <div>\n//                         <label htmlFor=\"username\">Ваше ім'я</label>\n//                         {editMode ? (\n//                           <input\n//                             type=\"text\"\n//                             id=\"username\"\n//                             name=\"username\"\n//                             value={userData.username}\n//                             onChange={handleInputChange}\n//                           />\n//                         ) : (\n//                           <p>{username} <button onClick={() => setEditMode(true)}>Edit</button></p>\n//                         )}\n\n//                         <label htmlFor=\"email\">Ваша емейл:</label><p>{email}</p>\n//                         <label htmlFor=\"role\">Ваша роль:</label><p>{role}</p>\n\n//                         <label htmlFor=\"phone\">Ваш номер телефону:</label>\n//                         {editMode ? (\n//                           <input\n//                             type=\"tel\"\n//                             id=\"phone\"\n//                             name=\"phone\"\n//                             value={userData.phone}\n//                             onChange={handleInputChange}\n//                           />\n//                         ) : (\n//                           <p>{phone} <button onClick={() => setEditMode(true)}>Edit</button></p>\n//                         )}\n\n//                         <label htmlFor=\"birthday\">Ваша дата дня народження:</label>\n//                         {editMode ? (\n//                           <input\n//                             type=\"date\"\n//                             id=\"birthday\"\n//                             name=\"birthday\"\n//                             value={userData.birthday}\n//                             onChange={handleInputChange}\n//                           />\n//                         ) : (\n//                           <p>{birthday} <button onClick={() => setEditMode(true)}>Edit</button></p>\n//                         )}\n//                     </div>\n\n//                     {editMode && (\n//                       <button type=\"submit\" onClick={handleUpdateUser}>Зберегти</button>\n//                     )}\n//                     <LogOut onClick={handleLogout}>Вийти</LogOut>\n//                 </div>\n//             }\n//             {!isLoggedInUser &&\n//                 <div>\n//                     <div>Please Register Here: <StyledLink to=\"/auth/register\">Register</StyledLink></div>\n//                 </div>\n//             }\n//         </div>\n//     </div>\n//   );\n// };\n\n// export default MyProfile;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React , { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { useDispatch, useSelector } from 'react-redux';\n// // import { loginUser } from '../../redux/auth/authSlice';\n// // import { toast } from 'react-toastify';\n// // import { Formik, Field } from 'formik';\n// // import * as Yup from 'yup';\n// import { setID, setName, setAvatar, setEmail, setRole, setPhone, setBirthday  } from '../../redux/users/userSelectors';\n// import { updateUser } from '../../redux/users/userOperations';\n\n// // import { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\n// import {\n// //   ErrorText,\n//   Img,\n// //   Inputs,\n// //   Container,\n// //   PasswordInput,\n// //   Content,\n// //   LoginBtn,\n// //   StyledRegistrationLink,\n//   StyledLink,\n// //   PasswordToggle,\n// //   PasswordIcon,\n//   LogOut\n// } from './MyProfile.styled';\n// import { logout } from '../../redux/auth/authOperations';\n// import { toast } from 'react-toastify';\n\n// const MyProfile = () => {\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n//   const isLoggedInUser = useSelector(state => state.auth.isLoggedIn);\n\n//   const username = useSelector(setName);\n//   const avatar = useSelector(setAvatar);\n//   const email = useSelector(setEmail);\n//   const role = useSelector(setRole);\n//   const phone = useSelector(setPhone);\n//   const birthday = useSelector(setBirthday);\n//   const userId = useSelector(setID);\n\n//   const [userData, setUserData] = useState({\n//     username: '',\n//     phone: '',\n//     birthday: '',\n//   });\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setUserData({\n//       ...userData,\n//       [name]: value,\n//     });\n//   };\n\n//   const handleUpdateUser = () => {\n//     dispatch(updateUser(userId, userData));\n\n//     if (!handleUpdateUser) {\n//       toast.success('Ваш профіль успішно оновлено');\n//     } else {\n//       toast.error('Помилка під час оновлення профілю');\n//     }\n//   };\n\n//   const handleLogout = async () => {\n//     try {\n//       await dispatch(logout());\n//       navigate('/');\n//       toast.success('Ви успішно розлогінились');\n//     } catch (error) {\n//       console.log('Сталася помилка під час виходу:', error);\n//       toast.error('Під час розлогінення сталася помилка');\n//     }\n//   };\n\n//   return (\n//     <div>\n//         <div>\n//             {isLoggedInUser &&\n//                 <div>\n//                     <h1>Ваш профіль</h1>\n//                     <p>{userId}</p>\n//                     <Img src={avatar} alt=\"\" />\n//                     <div>\n//                         <label htmlFor=\"username\">Ваше ім'я</label><p>{username}</p>\n//                         <label htmlFor=\"email\">Ваша емейл:</label><p>{!email ? 'Пошта: Немає' : email}</p>\n//                         <label htmlFor=\"role\">Ваша роль:</label><p>{!role ? 'Права доступу: Немає' : role}</p>\n\n//                         <label htmlFor=\"phone\">Ваш номер телефону:</label>\n//                         <p>{!phone ? \n//                         <div>\n//                             <p>У вас немає номера телефону, будь ласка напишіть ваш номер телефону</p>\n//                             <label for=\"telephone\">Номер телефону:</label>\n//                             <input type=\"tel\" id=\"phone\" name=\"phone\" value={userData.phone} onChange={handleInputChange} />\n//                         </div> : phone}</p>\n\n//                         <label htmlFor=\"birthday\">Ваша дата дня народження:</label>\n//                         <p>{!birthday ? \n//                         <div>\n//                             <p>У вас не встановлена дата вашого дня народження, будь ласка обереіть вашу дату дня народження</p>\n//                             <label for=\"birthday\">Дата народження:</label>\n//                             <input type=\"date\" id=\"birthday\" name=\"birthday\" value={userData.birthday} onChange={handleInputChange} />\n//                         </div> : <div>{ birthday} <button>Edit</button></div>}</p>\n//                     </div>\n\n//                     <button type=\"submit\" onClick={handleUpdateUser}>Редагувати</button>\n//                     <LogOut onClick={handleLogout}>Вийти</LogOut>\n//                 </div>\n//             }\n//             {!isLoggedInUser &&\n//                 <div>\n//                     <div>Please Register Here: <StyledLink to=\"/auth/register\">Register</StyledLink></div>\n//                 </div>\n//             }\n//         </div>\n//     </div>\n//   );\n// };\n\n// export default MyProfile;"],"names":["styled","header","_templateObject","_taggedTemplateLiteral","LogOut","button","_templateObject2","Img","img","_templateObject3","StyledLink","div","_templateObject4","_templateObject5","li","_templateObject6","NavLink","_templateObject7","_templateObject8","Link","_ref","selected","textTransform","fontSize","fontWeight","color","textDecoration","ul","_templateObject9","_templateObject10","_templateObject11","_templateObject12","MyProfile","dispatch","useDispatch","navigate","useNavigate","isLoggedInUser","useSelector","state","auth","isLoggedIn","username","setName","avatar","setAvatar","email","setEmail","role","setRole","phone","setPhone","birthday","setBirthday","userId","setID","editMode","setEditMode","useState","userData","setUserData","handleInputChange","e","name","value","target","_jsx","children","_jsxs","src","alt","htmlFor","type","id","onChange","onClick","async","updateUser","toast","success","error","logout","console","log","to"],"sourceRoot":""}