{"version":3,"file":"static/js/214.322c2dbf.chunk.js","mappings":"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","sources":["redux/users/userSelectors.js","components/MyProfile/MyProfile.styled.js","components/MyProfile/MyProfile.jsx"],"sourcesContent":["export const selectUser = state => state.user;\n\nexport const selectUserAuth = state => state.auth.user;","import styled from '@emotion/styled';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const HeaderWrapper = styled.header`\n  justify-content: space-between;\n  padding: 7px 40px 10px 40px;\n  display: flex;\n  gap: 30px;\n  background: #fff;\n  top: 0;\n  position: sticky;\n  z-index: 3;\n  @media screen and (max-width: 780px) {\n    padding: 7px 20px 10px 20px;\n    align-items: center;\n  }\n`;\n\nexport const LogOut = styled.button`\n  background: red;\n  color: white;\n  border-radius: 15px;\n  font-size: 15px;\n  padding: 4px 20px;\n  border: none;\n  @media screen and (max-width: 780px) {\n    padding: 7px 20px 10px 20px;\n    align-items: center;\n  }\n`;\n\nexport const Img = styled.img`\n  border-radius: 50%;\n  /* width: 60%; */\n  padding: 5px;\n  border: 3px solid #9AC43C;\n  width: 90px;\n  height: 90px;\n`;\n\nexport const Menu = styled.div`\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n  align-items: flex-end;\n`;\n\nexport const Question = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\n\nexport const MenuItem = styled.li`\n  line-height: 1.6em;\n  color: #111;\n`;\n\nexport const A = styled(NavLink)`\n  padding-bottom: 10px;\n  font-size: 14px;\n  font-weight: 700;\n  color: #9ac43c;\n  border-bottom: 1px dotted #e6e6e6;\n  @media (max-width: 780px) {\n    border-bottom: none;\n    margin: 0;\n    padding-bottom: 0;\n  }\n`;\n\nexport const Ab = styled(NavLink)``;\n\nexport const Div = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 45px;\n`;\n\nexport const LastDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n`;\n\nexport const EditBtn = styled.button`\n    font-style: normal;\n    font-weight: var(--fontWeight500);\n    font-size: 16px;\n    line-height: 21px;\n    text-align: center;\n    letter-spacing: -0.02em;\n    width: 100%;\n    height: 29px;\n    margin-top: 10px;\n    background: rgb(154, 196, 60);\n    border-radius: 15px;\n    @media screen and (max-width: 768px) {\n        width: 287px;\n    }\n`;\n\nexport const EditPhoto = styled.label`\n    font-style: normal;\n    font-weight: var(--fontWeight500);\n    font-size: 16px;\n    line-height: 21px;\n    text-align: center;\n    letter-spacing: -0.02em;\n    width: 100%;\n    height: 29px;\n    margin-top: 10px;\n    background: rgb(154, 196, 60);\n    color: black;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 15px;\n    margin-bottom: 15px;\n    cursor: pointer;\n    @media screen and (max-width: 768px) {\n        width: 287px;\n    }\n`;\n\n\nexport const DivStyles = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 60vh;\n  justify-content: center;\n`;\n\n\n\n\n\n\nexport const FileInputWrapper = styled.label`\n  display: inline-block;\n  margin-top: 10px;\n  width: 24px;\n  color: black;\n  height: 24px;\n  border-radius: 15px;\n  background: rgb(154, 196, 60);\n  font-size: 18px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n`;\n\nexport const FileInput = styled.input`\n  display: none;\n`;\n\n\n\n\nexport const DivPhoto = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 15%;\n`;\n\nexport const DivEdit = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\n\nexport const AboutA = styled(Link)`\n  text-transform: uppercase;\n  padding: 10px 15px 10px 15px;\n  display: block;\n  &:hover {\n    cursor: pointer;\n    background: #9ac43c;\n  }\n`;\n\nexport const MenuDiv = styled.div`\n  display: flex;\n  gap: 15px;\n  margin-top: 30px;\n  color: #9AC43C;\n  align-items: center;\n`;\n\n\nexport const StyledLink = styled(Link)`\n  left: 160px;\n  top: 40px;\n  font-style: normal;\n  font-weight: var(--fontWeight500);\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: #111;\n`;","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../redux/auth/authOperations';\nimport { updateUser, updateUserAvatar } from '../../redux/users/userOperations';\nimport { selectUserAuth } from '../../redux/users/userSelectors';\nimport { toast } from 'react-toastify';\nimport { Img, StyledLink, LogOut, EditBtn, Div, DivPhoto, DivEdit, EditPhoto, FileInput, LastDiv, DivStyles } from './MyProfile.styled';\n\nconst MyProfile = () => {\n  const isLoggedInUser = useSelector(state => state.auth.isLoggedIn);\n  const user = useSelector(selectUserAuth);\n  console.log(user)\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [avatarFile, setAvatarFile] = useState(null);\n  const [editMode, setEditMode] = useState(false);\n  const [userData, setUserData] = useState(() => {\n    const storedUserData = JSON.parse(localStorage.getItem('userData'));\n    return storedUserData || {\n      username: user.username,\n      phone: user.phone,\n      birthday: user.birthday,\n      avatar: user.avatar,\n    };\n  });\n\n  useEffect(() => {\n    localStorage.setItem('userData', JSON.stringify(userData));\n  }, [userData]);\n\n  const handleFileChange = (event) => {\n    setAvatarFile(event.target.files[0]);\n  };\n\n  const handleUpdateAvatar = async () => {\n    if (avatarFile) {\n      try {\n        await dispatch(updateUserAvatar({ userId: user.id, avatarFile })).unwrap();\n        setUserData(prevData => ({\n          ...prevData,\n          avatar: URL.createObjectURL(avatarFile)\n        }));\n        toast.success('Ваш аватар успішно оновлено');\n      } catch (error) {\n        toast.error('Ви не вибрали файл або сталася помилка');\n      }\n    } else {\n      toast.error('Ви не вибрали файл або сталася помилка');\n    }\n  };\n  \n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUserData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n\n  const handleUpdateUser = async () => {\n    try {\n      await dispatch(updateUser({ userId: user.id, userData })).unwrap();\n      setEditMode(false);\n      toast.success('Ваш профіль успішно оновлено');\n    } catch (error) {\n      console.error('Помилка під час оновлення профілю:', error);\n      toast.error('Помилка під час оновлення профілю');\n    }\n  };\n\n  const handleLogout = async () => {\n    try {\n      await dispatch(logout());\n      navigate('/');\n      toast.success('Ви успішно вийшли з облікового запису');\n    } catch (error) {\n      console.error('Помилка під час виходу з облікового запису:', error);\n      toast.error('Помилка під час виходу з облікового запису');\n    }\n  };\n\n  return (\n    <div>\n      {isLoggedInUser && (\n        <DivStyles>\n          <Div>\n            <DivPhoto>\n              <Img src={userData.avatar} alt=\"Avatar\" name=\"avatar\" />\n              <FileInput type=\"file\" id=\"file\" onChange={handleFileChange} />\n              <EditPhoto htmlFor=\"file\">Змінити фото</EditPhoto>\n              <button onClick={handleUpdateAvatar}>Оновити аватар</button>\n            </DivPhoto>\n            <DivEdit>\n              <label htmlFor=\"username\">Ваше ім'я</label>\n              {editMode ? (\n                <input type=\"text\" id=\"username\" name=\"username\" value={userData.username} onChange={handleChange} />\n              ) : (\n                <p>{userData.username} <EditBtn onClick={() => setEditMode(true)}>Редагувати</EditBtn></p>\n              )}\n\n              <label htmlFor=\"email\">Ваша електронна пошта:</label><p>{user.email}</p>\n              <label htmlFor=\"role\">Ваша роль:</label><p>{user.role}</p>\n\n              <label htmlFor=\"phone\">Ваш номер телефону:</label>\n              {editMode ? (\n                <input type=\"tel\" id=\"phone\" name=\"phone\" value={userData.phone} onChange={handleChange} />\n              ) : (\n                <p>{userData.phone} <EditBtn onClick={() => setEditMode(true)}>Редагувати</EditBtn></p>\n              )}\n              <label htmlFor=\"birthday\">Ваша дата народження:</label>\n              {editMode ? (\n                <input type=\"date\" id=\"birthday\" name=\"birthday\" value={userData.birthday} onChange={handleChange} />\n              ) : (\n                <p>{userData.birthday} <EditBtn onClick={() => setEditMode(true)}>Редагувати</EditBtn></p>\n              )}\n              {editMode && (\n                <EditBtn type=\"submit\" onClick={handleUpdateUser}>Зберегти</EditBtn>\n              )}\n            </DivEdit>\n          </Div>\n          <LastDiv>\n            <LogOut onClick={handleLogout} style={{ marginRight: '15px' }}>Вийти</LogOut>\n            <StyledLink to=\"/\">Головна</StyledLink>\n          </LastDiv>\n        </DivStyles>\n      )}\n      {!isLoggedInUser && (\n        <div>\n          <div>Будь ласка, <StyledLink to=\"/auth/register\">зареєструйтеся</StyledLink> тут</div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MyProfile;"],"names":["selectUserAuth","state","auth","user","styled","header","_templateObject","_taggedTemplateLiteral","LogOut","button","_templateObject2","Img","img","_templateObject3","Div","div","_templateObject4","_templateObject5","li","_templateObject6","NavLink","_templateObject7","_templateObject8","_templateObject9","LastDiv","_templateObject10","EditBtn","_templateObject11","EditPhoto","label","_templateObject12","DivStyles","_templateObject13","FileInput","_templateObject14","input","_templateObject15","DivPhoto","_templateObject16","DivEdit","_templateObject17","StyledLink","Link","_templateObject18","_templateObject19","_templateObject20","MyProfile","isLoggedInUser","useSelector","isLoggedIn","console","log","dispatch","useDispatch","navigate","useNavigate","avatarFile","setAvatarFile","useState","editMode","setEditMode","userData","setUserData","JSON","parse","localStorage","getItem","username","phone","birthday","avatar","useEffect","setItem","stringify","handleChange","e","name","value","target","prevData","_jsxs","children","_jsx","src","alt","type","id","onChange","event","files","htmlFor","onClick","async","updateUserAvatar","userId","unwrap","URL","createObjectURL","toast","success","error","email","role","updateUser","logout","style","marginRight","to"],"sourceRoot":""}