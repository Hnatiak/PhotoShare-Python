{"version":3,"file":"static/js/589.1160344c.chunk.js","mappings":"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","sources":["redux/users/userOperations.js","components/MyProfile/MyProfile.styled.js","components/MyProfile/MyProfile.jsx"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// export const updateUser = createAsyncThunk(\n//     'auth/updateUser',\n//     async (userData, { rejectWithValue }) => {\n//       try {\n//         const response = await axios.put('/api/users', userData);\n//         return response.data;\n//       } catch (error) {\n//         return rejectWithValue(error.response?.data || error.message);\n//       }\n//     }\n//   );\n\nexport const updateUser = createAsyncThunk(\n  'user/updateUser',\n  async (userId, userData, { rejectWithValue }) => {\n    try {\n      const response = await axios.put(`/api/users/${userId}`, userData);\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.response?.data || error.message);\n    }\n  }\n);","import styled from '@emotion/styled';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const HeaderWrapper = styled.header`\n  justify-content: space-between;\n  padding: 7px 40px 10px 40px;\n  display: flex;\n  gap: 30px;\n  background: #fff;\n  top: 0;\n  position: sticky;\n  z-index: 3;\n  @media screen and (max-width: 780px) {\n    padding: 7px 20px 10px 20px;\n    align-items: center;\n  }\n`;\n\nexport const LogOut = styled.button`\n  background: red;\n  color: white;\n  border-radius: 15px;\n  font-size: 15px;\n  padding: 4px 20px;\n  border: none;\n  @media screen and (max-width: 780px) {\n    padding: 7px 20px 10px 20px;\n    align-items: center;\n  }\n`;\n\nexport const Img = styled.img`\n  border-radius: 50%;\n`;\n\nexport const Menu = styled.div`\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n  align-items: flex-end;\n`;\n\nexport const Question = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\n\nexport const MenuItem = styled.li`\n  line-height: 1.6em;\n  color: #111;\n`;\n\nexport const A = styled(NavLink)`\n  padding-bottom: 10px;\n  font-size: 14px;\n  font-weight: 700;\n  color: #9ac43c;\n  border-bottom: 1px dotted #e6e6e6;\n  @media (max-width: 780px) {\n    border-bottom: none;\n    margin: 0;\n    padding-bottom: 0;\n  }\n`;\n\nexport const Ab = styled(NavLink)``;\n\nexport const MenuLinkActive = styled(Link)(({ selected }) => ({\n  textTransform: 'uppercase',\n  fontSize: '13px',\n  fontWeight: selected ? '700' : '400',\n  color: selected ? '#9AC43C' : '#111',\n  textDecoration: 'none',\n  '&:hover': {\n    color: '#9AC43C',\n  },\n}));\n\nexport const AboutUl = styled.ul`\n  position: absolute;\n  z-index: 3;\n  display: block;\n  color: white;\n  min-width: 180px;\n  padding: 0;\n  margin-top: 2px;\n  background: #222;\n  border: none;\n  opacity: inherit;\n  @media screen and (max-width: 780px) {\n    right: 0;\n    left: auto;\n    margin-right: 10px;\n  }\n`;\n\nexport const AboutA = styled(Link)`\n  text-transform: uppercase;\n  padding: 10px 15px 10px 15px;\n  display: block;\n  &:hover {\n    cursor: pointer;\n    background: #9ac43c;\n  }\n`;\n\nexport const MenuDiv = styled.div`\n  display: flex;\n  gap: 15px;\n  margin-top: 30px;\n  color: #9AC43C;\n  align-items: center;\n`;\n\n\nexport const StyledLink = styled(Link)`\n  left: 160px;\n  top: 40px;\n  font-style: normal;\n  font-weight: var(--fontWeight500);\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: #111;\n`;","import React , { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { loginUser } from '../../redux/auth/authSlice';\n// import { toast } from 'react-toastify';\n// import { Formik, Field } from 'formik';\n// import * as Yup from 'yup';\nimport { setID, setName, setAvatar, setEmail, setRole, setPhone, setBirthday  } from '../../redux/users/userSelectors';\nimport { updateUser } from '../../redux/users/userOperations';\n\n// import { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\nimport {\n//   ErrorText,\n  Img,\n//   Inputs,\n//   Container,\n//   PasswordInput,\n//   Content,\n//   LoginBtn,\n//   StyledRegistrationLink,\n  StyledLink,\n//   PasswordToggle,\n//   PasswordIcon,\n  LogOut\n} from './MyProfile.styled';\nimport { logout } from '../../redux/auth/authOperations';\nimport { toast } from 'react-toastify';\n\nconst MyProfile = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isLoggedInUser = useSelector(state => state.auth.isLoggedIn);\n\n  const username = useSelector(setName);\n  const avatar = useSelector(setAvatar);\n  const email = useSelector(setEmail);\n  const role = useSelector(setRole);\n  const phone = useSelector(setPhone);\n  const birthday = useSelector(setBirthday);\n  const userId = useSelector(setID);\n\n  const [userData, setUserData] = useState({\n    username: '',\n    phone: '',\n    birthday: '',\n  });\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setUserData({\n      ...userData,\n      [name]: value,\n    });\n  };\n\n  const handleUpdateUser = () => {\n    dispatch(updateUser(userId, userData));\n\n    if (!handleUpdateUser) {\n      toast.success('Ваш профіль успішно оновлено');\n    } else {\n      toast.error('Помилка під час оновлення профілю');\n    }\n  };\n\n  const handleLogout = async () => {\n    try {\n      await dispatch(logout());\n      navigate('/');\n      toast.success('Ви успішно розлогінились');\n    } catch (error) {\n      console.log('Сталася помилка під час виходу:', error);\n      toast.error('Під час розлогінення сталася помилка');\n    }\n  };\n\n  return (\n    <div>\n        <div>\n            {isLoggedInUser &&\n                <div>\n                    <h1>Ваш профіль</h1>\n                    <p>{userId}</p>\n                    <Img src={avatar} alt=\"\" />\n                    <div>\n                        <label htmlFor=\"username\">Ваше ім'я</label><p>{username}</p>\n                        <label htmlFor=\"email\">Ваша емейл:</label><p>{!email ? 'Пошта: Немає' : email}</p>\n                        <label htmlFor=\"role\">Ваша роль:</label><p>{!role ? 'Права доступу: Немає' : role}</p>\n\n                        <label htmlFor=\"phone\">Ваш номер телефону:</label>\n                        <p>{!phone ? \n                        <div>\n                            <p>У вас немає номера телефону, будь ласка напишіть ваш номер телефону</p>\n                            <label for=\"telephone\">Номер телефону:</label>\n                            <input type=\"tel\" id=\"phone\" name=\"phone\" value={userData.phone} onChange={handleInputChange} />\n                        </div> : phone}</p>\n\n                        <label htmlFor=\"birthday\">Ваша дата дня народження:</label>\n                        <p>{!birthday ? \n                        <div>\n                            <p>У вас не встановлена дата вашого дня народження, будь ласка обереіть вашу дату дня народження</p>\n                            <label for=\"birthday\">Дата народження:</label>\n                            <input type=\"date\" id=\"birthday\" name=\"birthday\" value={userData.birthday} onChange={handleInputChange} />\n                        </div> : <div>{ birthday} <button>Edit</button></div>}</p>\n                    </div>\n\n                    <button type=\"submit\" onClick={handleUpdateUser}>Редагувати</button>\n                    <LogOut onClick={handleLogout}>Вийти</LogOut>\n                </div>\n            }\n            {!isLoggedInUser &&\n                <div>\n                    <div>Please Register Here: <StyledLink to=\"/auth/register\">Register</StyledLink></div>\n                </div>\n            }\n        </div>\n    </div>\n  );\n};\n\nexport default MyProfile;"],"names":["updateUser","createAsyncThunk","async","userId","userData","_ref","rejectWithValue","axios","put","concat","data","error","_error$response","response","message","styled","header","_templateObject","_taggedTemplateLiteral","LogOut","button","_templateObject2","Img","img","_templateObject3","StyledLink","div","_templateObject4","_templateObject5","li","_templateObject6","NavLink","_templateObject7","_templateObject8","Link","selected","textTransform","fontSize","fontWeight","color","textDecoration","ul","_templateObject9","_templateObject10","_templateObject11","_templateObject12","MyProfile","dispatch","useDispatch","navigate","useNavigate","isLoggedInUser","useSelector","state","auth","isLoggedIn","username","setName","avatar","setAvatar","email","setEmail","role","setRole","phone","setPhone","birthday","setBirthday","setID","setUserData","useState","handleInputChange","e","name","value","target","handleUpdateUser","toast","success","_jsx","children","_jsxs","src","alt","htmlFor","for","type","id","onChange","onClick","logout","console","log","to"],"sourceRoot":""}